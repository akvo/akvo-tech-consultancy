{"version":3,"sources":["reducers/actions.js","util/Loading.js","component/GroupButtons.js","component/GroupHeaders.js","component/DataPoint.js","util/QuestionHandler.js","component/QuestionType.js","component/Questions.js","util/Badges.js","component/Pagination.js","component/Header.js","component/Submit.js","Home.js","reducers/questionReducers.js","App.js","serviceWorker.js","index.js"],"names":["mapStateToProps","state","value","mapDispatchToProps","dispatch","loadQuestions","data","type","changeGroup","group","restoreAnswers","reduceAnswer","answer","reduceDataPoint","checkSubmission","submitState","generateUUID","changeSettings","storeCascade","pulseloader","css","_templateObject","Loading","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","color","react_default","a","createElement","className","styles","BeatLoader_default","sizeUnit","size","React","Component","connect","GroupButtons","getUrl","replace","toLowerCase","getLoading","util_Loading","showQuestion","bind","assertThisInitialized","getQuestionList","listClass","_showQuestion","groups","_this2","list","map","key","index","onClick","href","heading","active","questions","length","GroupHeaders","getHeader","filter","g","react","DataPoint","index_esm","datapoint","uuid","getQuestionType","qtype","validationRule","validationType","options","isJsonString","str","JSON","parse","e","API_ORIGIN","window","location","origin","pathname","split","pathurl","registerPlugin","FilePondPluginImagePreview","QuestionType","instanceUrl","localStorage","getItem","id","other","setDpStorage","getRadio","getPhoto","renderRadio","getCascadeDropdown","renderCascade","renderCascadeOption","fetchCascade","limitCascade","handleChange","handleOther","handlePhoto","handleCascadeChange","handleGlobal","questionid","qval","targetLevel","text","vals","storage","option","parseInt","current","x","stringify","concat","toConsumableArray","setItem","image","setState","event","target","ddindex","selectedIndex","name","allowMultiple","multipleValue","indexOf","push","splice","removeItem","allowOther","checked","otherClass","toString","defineProperty","localeNameFlag","names","b","c","isNaN","forEach","edited","join","history","includes","unique","opts","undefined","_objectSpread","radioType","oi","main","opt","i","o","oname","onChange","htmlFor","lv","_this3","Array","isArray","levels","level","l","cascades","choose_options","dropdown","cascade","selected","ix","url","cascadeResource","console","log","res","availcasc","isavailable","_this$setState3","err","_this4","axios","get","then","_this4$setState","validation","answered","min","minVal","max","maxVal","_this5","react_filepond","server","process","method","onload","response","onerror","ondata","formData","append","patch","revert","data-max-file-size","rows","formtype","getCascade","getInput","getInputOther","getTextArea","Questions","getForms","renderMandatoryIcon","renderQuestion","qid","question","component_QuestionType","Mandatory","Card","show","CardBody","CardTitle","order","mandatory","Pagination","showGroup","prev_class","next_class","prev_target","next_target","Header","Toast","ToastHeader","alt","src","surveyName","ToastBody","surveyId","version","SITE_KEY","Submit","handleCaptcha","captcha","expired","asyncScriptOnLoad","callback","showCaptcha","esm","style","display","overflow","borderBottom","padding","theme","ref","_reCaptchaRef","sitekey","showPassword","handleUser","handlePassword","showSpinner","Spinner","submitForm","_showCaptcha","_showSpinner","createRef","Date","now","content_length","content","post","headers","Content-Length","Content-Type","swal","icon","title","closeOnClickOutside","closeOnEsc","button","timer","setTimeout","clear","reload","catch","error","submit","disabled","API_URL","Home","updateData","app","questionId","answerType","questionGroup","q","toUpperCase","Home_objectSpread","dataPointId","Math","random","slice","substring","updateQuestions","questionIndex","instance","match","params","surveyid","setFullscreen","renderQuestions","renderGroups","_fullScreen","_rendered","currentState","_fullscreen","_isLoading","load","component_Questions","component_GroupButtons","component_Header","component_Submit","component_DataPoint","component_Pagination","component_GroupHeaders","initialState","answers","datapoints","pages","validateGroup","addQuestions","_ref","mapgroup","questionReducers_objectSpread","relable","apply","listDatapoints","listMandatory","showHideQuestions","orig","updated_answer","dependent","dependency","answer_value","find","u","replaceAnswers","restore","isNan","activelist","active_mandatory","y","setupPages","store","createStore","arguments","action","App","es","react_router_dom","react_router","path","BASE_URL","render","src_Home","assign","Boolean","hostname","require","config","qlcache","atcache","photocache","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wPAAaA,EAAkB,SAACC,GAC5B,MAAO,CACHC,MAAOD,IAIFE,EAAqB,SAACC,GAC/B,MAAO,CACHC,cAAe,SAACC,GAAD,OAAUF,EAAS,CAACG,KAAK,iBAAkBD,KAAKA,KAC/DE,YAAa,SAACF,GAAD,OAAUF,EAAS,CAACG,KAAK,eAAgBE,MAAMH,KAC5DI,eAAgB,SAACJ,GAAD,OAAUF,EAAS,CAACG,KAAK,kBAAmBD,KAAKA,KACjEK,aAAc,SAACL,GAAD,OAAUF,EAAS,CAACG,KAAK,gBAAiBK,OAAON,KAC/DO,gBAAiB,SAACP,GAAD,OAAUF,EAAS,CAACG,KAAK,mBAAoBD,KAAKA,KACnEQ,gBAAiB,kBAAMV,EAAS,CAACG,KAAK,sBACtCQ,YAAa,SAACT,GAAD,OAAUF,EAAS,CAACG,KAAK,eAAgBD,KAAKA,KAC3DU,aAAc,SAACV,GAAD,OAAUF,EAAS,CAACG,KAAK,gBAAiBD,KAAKA,KAC7DW,eAAgB,SAACX,GAAD,OAAUF,EAAS,CAACG,KAAK,iBAAkBD,KAAKA,KAChEY,aAAc,SAACZ,GAAD,OAAUF,EAAS,CAACG,KAAK,gBAAiBD,KAAKA,uLCHrE,IAAMa,EAAcC,cAAHC,KAEXC,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDtB,MAAQ,CACT8B,MAAO,WAHIP,wEAQf,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,KAAKJ,MAAMa,QACtBJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,iBAGLH,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACIb,IAAMD,EACNmB,SAAW,KACXC,KAAS,GACTR,MAAUJ,KAAK1B,MAAM8B,gBAlBfS,IAAMC,WAyBbC,cAAQ1C,EAAiBG,EAAzBuC,CAA6CpB,GCpCtDqB,cAEF,SAAAA,EAAYpB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,IACfnB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,KAAMJ,KAUVqB,OAAU,SAACnC,GAAD,MACN,IAAMA,EAAMoC,QAAQ,KAAK,KAAKC,eAZftB,EAqCnBuB,WAAa,kBAAOf,EAAAC,EAAAC,cAACc,EAAD,CAASZ,OAAQ,qBAnCjCZ,EAAKyB,aAAezB,EAAKyB,aAAaC,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAK4B,gBAAkB5B,EAAK4B,gBAAgBF,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACvBA,EAAK6B,UAAY,0CACjB7B,EAAKoB,OAASpB,EAAKoB,OAAOM,KAAZzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACdA,EAAKvB,MAAQ,CACXqD,cAAe,IAPF9B,4EAeNf,GACTkB,KAAKJ,MAAMf,YAAYC,wFAMX8C,GAAO,IAAAC,EAAA7B,KACnB,OAAO4B,EAAOE,KAAKC,IAAI,SAACjD,GAAD,OACfuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAA8BwB,IAAK,SAAWlD,EAAMmD,OACnE5B,EAAAC,EAAAC,cAAA,KAAG2B,QAAS,WAAOL,EAAKP,aAAaxC,EAAMmD,QAC3CE,KAAMN,EAAKZ,OAAOnC,EAAMsD,SACxB5B,UAAY1B,EAAMmD,QAAUL,EAAOS,OAC3BR,EAAKH,UAAY,cAAgBG,EAAKH,UAAY,aAGpD5C,EAAMsD,6CASpB,OAC0C,IAAtCpC,KAAKJ,MAAMrB,MAAM+D,UAAUC,OAC3BvC,KAAKoB,aAAepB,KAAKyB,gBAAgBzB,KAAKJ,MAAMrB,MAAMqD,eA5C3Cd,aAiDZC,cAAQ1C,EAAiBG,EAAzBuC,CAA6CC,GCjDtDwB,cAEF,SAAAA,EAAY5C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IACf3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAMJ,KAQV6C,UAAY,SAACb,GAET,OADaA,EAAOE,KAAKY,OAAO,SAAAC,GAAC,OAAIA,EAAEV,QAAUL,EAAOS,SAC1CN,IAAI,SAACjD,GAAD,OACduB,EAAAC,EAAAC,cAACqC,EAAA,SAAD,CAAUZ,IAAKlD,EAAMmD,OACrB5B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAS1B,EAAMsD,SAC7B/B,EAAAC,EAAAC,cAAA,SAAIzB,EAAMsD,aAdCvC,EAmBnBuB,WAAa,kBAAOf,EAAAC,EAAAC,cAACc,EAAD,CAASZ,OAAQ,oBAjBjCZ,EAAK4C,UAAY5C,EAAK4C,UAAUlB,KAAfzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACjBA,EAAKuB,WAAavB,EAAKuB,WAAWG,KAAhBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAHHA,qHAsBf,OAC0C,IAAtCG,KAAKJ,MAAMrB,MAAM+D,UAAUC,OAC3BvC,KAAKoB,aAAepB,KAAKyC,UAAUzC,KAAKJ,MAAMrB,MAAMqD,eA1BrCd,aAgCZC,cAAQ1C,EAAR0C,CAAyByB,WC9BlCK,mLAGE,OACIxC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACAvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAa1C,MAAM,UAAUI,UAAU,oBACtCR,KAAKJ,MAAMrB,MAAMwE,WAEtB1C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBR,KAAKJ,MAAMrB,MAAMyE,eAV1ClC,aAiBTC,cAAQ1C,EAAR0C,CAAyB8B,WCxB3BI,EAAkB,SAACrD,GAC5B,IAAIsD,EAAQtD,EAAMhB,KAOlB,OANIgB,EAAMuD,iBACND,EAAiD,YAAxCtD,EAAMuD,eAAeC,eAA+B,SAAW,QAExExD,EAAMyD,UACNH,EAAQ,UAEJA,GACJ,IAAK,YAAa,MAClB,IAAK,QAAS,MAAO,QACrB,IAAK,SAAU,MAAO,SACtB,IAAK,SAAU,MAAO,SACtB,IAAK,UAAW,MAAO,UACvB,IAAK,MAAO,MAAO,OACnB,IAAK,OAAQ,MAAO,OACpB,QACI,MAAO,OAEf,OAAOA,GAGEI,EAAe,SAACC,GACzB,IACIC,KAAKC,MAAMF,GACb,MAAOG,GACL,OAAO,EAEX,OAAO,+PClBX,IAAMC,EAA2BC,OAAOC,SAASC,OAASF,OAAOC,SAASE,SAASC,MAAM,KAAK,GAAK,QAC7FC,EAAsB,EAE5BC,yBAAeC,SAETC,cAEF,SAAAA,EAAYxE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,IACfvE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsE,GAAAjE,KAAAH,KAAMJ,KACDyE,YAAcT,OAAOC,SAASE,SAASC,MAAM,KAAKC,GACvDpE,EAAKtB,MAAQ+F,aAAaC,QAAQ1E,EAAKD,MAAMjB,KAAK6F,IAClD3E,EAAK4E,MAAQH,aAAaC,QAAQ,SAAW1E,EAAKD,MAAMjB,KAAK6F,IAC7D3E,EAAKvB,MAAQ,CACTC,MAAOsB,EAAKtB,MAAQsB,EAAKtB,MAAQ,GACjCkG,MAAO5E,EAAK4E,MAAQ5E,EAAK4E,MAAQ,IAErC5E,EAAK6E,aAAe7E,EAAK6E,aAAanD,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAK8E,SAAW9E,EAAK8E,SAASpD,KAAdzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAChBA,EAAK+E,SAAW/E,EAAK+E,SAASrD,KAAdzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAChBA,EAAKgF,YAAchF,EAAKgF,YAAYtD,KAAjBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACnBA,EAAKiF,mBAAqBjF,EAAKiF,mBAAmBvD,KAAxBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAC1BA,EAAKkF,cAAgBlF,EAAKkF,cAAcxD,KAAnBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACrBA,EAAKmF,oBAAsBnF,EAAKmF,oBAAoBzD,KAAzBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAC3BA,EAAKoF,aAAepF,EAAKoF,aAAa1D,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAKqF,aAAe,EACpBrF,EAAKsF,aAAetF,EAAKsF,aAAa5D,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAKuF,YAAcvF,EAAKuF,YAAY7D,KAAjBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACnBA,EAAKwF,YAAcxF,EAAKwF,YAAY9D,KAAjBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACnBA,EAAKyF,oBAAsBzF,EAAKyF,oBAAoB/D,KAAzBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAC3BA,EAAK0F,aAAe1F,EAAK0F,aAAahE,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAtBLA,4EAyBN2F,EAAYC,GAEjBzF,KAAKJ,MAAMb,eAAeiB,KAAKJ,MAAMrB,MAAM+D,WAI/CtC,KAAKJ,MAAMf,YAAYmB,KAAKJ,MAAMrB,MAAMqD,OAAOS,QAC/CrC,KAAKJ,MAAMT,8DAGKuG,EAAaC,EAAMnB,EAAIjG,GACvC,IAAIqH,EACAC,EAAU,CAACrB,GAAGkB,EAAYC,KAAKA,EAAMG,OAAOC,SAASxH,IACzD,GAAI+F,aAAaC,QAAQC,GAAK,CAC1B,IACIwB,EADgBxC,KAAKC,MAAMa,aAAaC,QAAQC,IACxB9B,OAAO,SAAAuD,GAAC,OAAIA,EAAEzB,GAAKkB,IAC/CE,EAAOpC,KAAK0C,UAAL,GAAAC,OAAArG,OAAAsG,EAAA,EAAAtG,CAAmBkG,GAAnB,CAA4BH,UAEnCD,EAAOpC,KAAK0C,UAAU,CAACL,IAM3B,OAJoB,IAAhBH,IACApB,aAAa+B,QAAQrG,KAAKJ,MAAMjB,KAAK6F,GAAIoB,GACzC5F,KAAKuF,aAAavF,KAAKJ,MAAMjB,KAAK6F,GAAIoB,KAEnC,sCAGCU,GACR,IAAI9B,EAAKxE,KAAKJ,MAAMjB,KAAK6F,GACzBF,aAAa+B,QAAQ7B,EAAI8B,GACzBtG,KAAKuG,SAAS,CAAChI,MAAO+H,IACtBtG,KAAKuF,aAAaf,EAAI8B,wCAGbE,GACT,IAAIhC,EAAKxE,KAAKJ,MAAMjB,KAAK6F,GACrBjG,EAAQiI,EAAMC,OAAOlI,MACrBkI,EAASD,EAAMC,OAAOjC,GAC1B,GAAIiC,EAAOzC,MAAM,KAAK,GAClB,OAAOhE,KAAKoF,YAAYqB,EAAQlI,GAEpC,GAA6B,YAAzByB,KAAKJ,MAAMjB,KAAKC,KAAoB,CACpC,IAAI8H,EAAUF,EAAMC,OAAOE,cACvBhB,EAAOa,EAAMC,OAAOC,GAASf,KAC7BD,EAAcK,SAASS,EAAMC,OAAOG,KAAK5C,MAAM,KAAK,IAAM,EAC9DhE,KAAKsF,oBAAoBI,EAAaC,EAAMnB,EAAIjG,GAC5CyB,KAAKkF,aAAeQ,GACpB1F,KAAK8E,mBAAmBvG,EAAOmH,QAGlC,GAAI1F,KAAKJ,MAAMjB,KAAK0E,SAAWrD,KAAKJ,MAAMjB,KAAK0E,QAAQwD,cAAgB,CACxE,IAAIC,EAAgB,GAiBpB,GAhBIxC,aAAaC,QAAQC,KACrBsC,EAAgBtD,KAAKC,MAAMa,aAAaC,QAAQC,MAEd,IAAlCsC,EAAcC,QAAQxI,GACtBuI,EAAcE,KAAKzI,GAE/BuI,EAAcG,OAAOH,EAAcC,QAAQxI,GAAQ,GAEhDuI,EAAcvE,OAAS,GACjB+B,aAAa+B,QAAQ7B,EAAIhB,KAAK0C,UAAUY,IACxC9G,KAAKuG,SAAS,CAAChI,MAAOuI,IACnB9G,KAAKuF,aAAaf,EAAIjG,KAElC+F,aAAa4C,WAAW1C,GACfxE,KAAKuG,SAAS,CAAChI,MAAO,MAEpByB,KAAKJ,MAAMjB,KAAK0E,QAAQ8D,WAAY,CACnC,GAAc,iBAAV5I,GAA4BiI,EAAMC,OAAOW,QAAQ,CACjD,IAAIC,EAAa,SAAWrH,KAAKJ,MAAMjB,KAAK6F,GAAG8C,WAC/CtH,KAAKuG,SAALzG,OAAAyH,EAAA,EAAAzH,CAAA,GAAgBuH,GAAa,IAEjC,GAAc,iBAAV9I,IAA6BiI,EAAMC,OAAOW,QAAQ,CAClD,IAAIC,EAAa,SAAWrH,KAAKJ,MAAMjB,KAAK6F,GAAG8C,WAC/CtH,KAAKuG,SAALzG,OAAAyH,EAAA,EAAAzH,CAAA,GAAgBuH,GAAa,KAGrCrH,KAAKuF,aAAaf,EAAIjG,QAEtB+F,aAAa+B,QAAQ7B,EAAIjG,GACzByB,KAAKuG,SAAS,CAAChI,MAAOA,IACtByB,KAAKuF,aAAaf,EAAIjG,GAO1B,GALa,KAAVA,IACCyB,KAAKuG,SAAS,CAAChI,MAAOA,IACtB+F,aAAa4C,WAAW1C,GACxBxE,KAAKuF,aAAaf,EAAIjG,IAEtByB,KAAKJ,MAAMjB,KAAK6I,eAAgB,CAChC,IAAIlH,EAAIkD,KAAKC,MAAMa,aAAaC,QAAQ,aACpCkD,EAAQ,GACZnH,EAAEyB,IAAI,SAAC2F,GACH,IAAIC,EAAIrD,aAAaC,QAAQmD,GACzBC,IACIrE,EAAaqE,IAAMC,MAAMD,GACXnE,KAAKC,MAAMkE,GAAG5F,IAAI,SAAAkE,GAAC,OAAIA,EAAEN,OAC/BkC,QAAQ,SAAAjB,GACZa,EAAMT,KAAKJ,KAGfa,EAAMT,KAAKW,IAGnB,OAAO,IAEX,IAAIG,EAASL,EAAMM,KAAK,OACxBzD,aAAa+B,QAAQ,iBAAkByB,GACvC9H,KAAKJ,MAAMV,gBAAgBoF,aAAaC,QAAQ,wDAI5CkC,EAAQlI,GAChB,IAAIyJ,EAAU,GACV1D,aAAaC,QAAQkC,KACrBuB,EAAU1D,aAAaC,QAAQkC,IAEnCuB,EAAUzJ,EACV+F,aAAa+B,QAAQI,EAAQuB,GAC7BhI,KAAKuG,SAAS,CAAC9B,MAAMuD,2CAIrB,GAAI1D,aAAaC,QAAQ,YAAa,CAClC,IAAIjE,EAAIkD,KAAKC,MAAMa,aAAaC,QAAQ,aACnCjE,EAAE2H,SAASjI,KAAKJ,MAAMjB,KAAK6F,KAC5BlE,EAAE0G,KAAKhH,KAAKJ,MAAMjB,KAAK6F,IAE3BF,aAAa+B,QAAQ,WAAY7C,KAAK0C,UAAU5F,SAEhDgE,aAAa+B,QAAQ,WAAY7C,KAAK0C,UAAU,CAAClG,KAAKJ,MAAMjB,KAAK6F,uCAK/D7F,EAAMuJ,GAAQ,IAAArG,EAAA7B,KAChBmI,EAAOxJ,EAAK0E,aACW+E,IAAvBD,EAAKtB,gBACLsB,uVAAIE,CAAA,GAAOF,EAAP,CAAatB,eAAe,KAEpC,IAAIyB,EAAaH,EAAKtB,cAAgB,WAAa,QAEnD,GADSsB,EAAKhB,WACN,CACJ,GAAKgB,EAAKrC,OAAOvD,OAAS,EAAI,CAC1B,IAAIgG,EAAKJ,EAAKrC,OAAOvD,OAAS,EAC1BiG,EAAOL,EAAKrC,OAAO/D,IAAI,SAAC0G,EAAKC,GAAN,OAAY7G,EAAKgD,aAAY,EAAO4D,EAAKC,EAAG/J,EAAK6F,GAAI8D,EAAWJ,KACvFzD,EAAQzE,KAAK6E,aAAY,EAAM,CAACc,KAAM,QAASpH,MAAM,gBAAiBgK,EAAI5J,EAAK6F,GAAI8D,EAAWJ,GAClG,SAAA/B,OAAArG,OAAAsG,EAAA,EAAAtG,CAAW0I,GAAX,CAAiB/D,IAErB,IAAI+D,EAAOxI,KAAK6E,aAAY,EAAOsD,EAAKrC,OAAQ,EAAGnH,EAAK6F,GAAI8D,EAAWJ,GACnEzD,EAAQzE,KAAK6E,aAAY,EAAM,CAACc,KAAM,QAASpH,MAAM,gBAAiB,EAAII,EAAK6F,GAAI8D,EAAWJ,GAClG,SAAA/B,OAAArG,OAAAsG,EAAA,EAAAtG,CAAW0I,GAAX,CAAiB/D,IAErB,OACI0D,EAAKrC,OAAOvD,OAAS,EAEpB4F,EAAKrC,OAAO/D,IAAI,SAAC0G,EAAKC,GAAN,OAAY7G,EAAKgD,aAAY,EAAO4D,EAAKC,EAAG/J,EAAK6F,GAAI8D,EAAWJ,KAEhFlI,KAAK6E,aAAY,EAAOsD,EAAKrC,OAAQ,EAAGnH,EAAK6F,GAAI8D,EAAWJ,uCAIxDS,EAAGF,EAAKC,EAAGlE,EAAI8D,EAAWJ,GACnC,IAAId,EAAU,kBAAO9C,aAAaC,QAAQC,KAAQiE,EAAIlK,OAItD,GAHY,aAAd+J,GAA4BtI,KAAK1B,MAAMC,MAAMwI,QAAQ0B,EAAIlK,QAAU,IACtE6I,EAAU,kBAAO,IAERuB,EAAG,CACH,IAAIC,EAAQ,SAASpE,EAAG8C,WACxB,OACIjH,EAAAC,EAAAC,cAAA,OAAKyB,IAAKkG,EAAS,cAAgBQ,EAAEpB,YACjCjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACIyB,IAAKkG,EAAS,UAAYQ,EAAEpB,WAC5B9G,UAAU,mBACV5B,KAAM0J,EACN1B,KAAMpC,EACNjG,MAAOkK,EAAIlK,MACXsK,SAAU7I,KAAKmF,aACfiC,QAASA,MAEb/G,EAAAC,EAAAC,cAAA,SACIC,UAAU,yCACVsI,QAAS,SAAYtE,EAAI8C,YACxBmB,EAAI9C,OAGjBtF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAW4G,IAAY,GAAG,UAC3B/G,EAAAC,EAAAC,cAAA,SACIC,UAAU,aACVsI,QAASF,GAFb,iBAKAvI,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACVwB,IAAKkG,EAAS,gBAAkBQ,EAAEpB,WAClC/I,MAAOyB,KAAK1B,MAAMmG,MAClB7F,KAAK,OACLgI,KAAMgC,EACNpE,GAAIoE,EACJC,SAAU7I,KAAKmF,iBAMnC,OACI9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVwB,IAAKkG,EAAS,cAAgBQ,EAAEpB,YAEjCjH,EAAAC,EAAAC,cAAA,SACIyB,IAAKkG,EAAS,UAAYQ,EAAEpB,WAC5B9G,UAAU,mBACV5B,KAAM0J,EACN1B,KAAMpC,EACNjG,MAAOkK,EAAIlK,MACXsK,SAAU7I,KAAKmF,aACfiC,QAASA,MAEb/G,EAAAC,EAAAC,cAAA,SACIC,UAAU,mBACVsI,QAAS,UAAYtE,EAAGkE,GAAGpB,YAC1BmB,EAAI9C,0CAMTwC,EAAMY,EAAIb,GAAQ,IAAAc,EAAAhJ,KAC1B,GAAIiJ,MAAMC,QAAQf,EAAKgB,OAAOC,OAAO,CACjC,IAAIC,EAAIlB,EAAKgB,OAAOC,MAAM7G,OAAS,EACnC,OAAO4F,EAAKgB,OAAOC,MAAMrH,IAAI,SAAC0G,EAAKC,GAE/B,OADAM,EAAK9D,aAAewD,EAAI,EACjBM,EAAKjE,cAAc0D,EAAKC,EAAGW,EAAGnB,KAI7C,OADAlI,KAAKkF,aAAe,EACblF,KAAK+E,cAAcoD,EAAKgB,OAAOC,MAAO,EAAG,EAAGlB,yCAGxCO,EAAKC,EAAGW,EAAGnB,GACtB,IAAIoB,EAAW,GACXC,EAAiB,WAAab,EAC9Bc,EAAWxJ,KAAK1B,MAAM0B,KAAK1B,MAAMiL,IACjCE,EACApJ,EAAAC,EAAAC,cAAA,OAAKyB,IAAKkG,EAAS,aAAeQ,GAClCrI,EAAAC,EAAAC,cAAA,WAAMkI,EAAI9C,MACVtF,EAAAC,EAAAC,cAAA,UACIC,UAAU,eACVjC,MAAQyB,KAAK1B,MAAMoL,SAAW9K,KAAK,SACnCgI,KAAO5G,KAAKJ,MAAMjB,KAAK6F,GAAG8C,WAAa,IAAMoB,EAC7CG,SAAU7I,KAAKmF,cAEf9E,EAAAC,EAAAC,cAAA,UAAQyB,IAAKkG,EAAS,qBAAyB3J,MAAOyB,KAAK1B,MAAMC,OAAjE,iBACCyB,KAAKgF,oBAAoBwE,EAAUd,EAAE,EAAGD,EAAI9C,KAAMuC,KAQ3D,OAJAoB,EAAStC,KAAKyC,GACVzJ,KAAKkF,cAAgBwD,GACrB1I,KAAKmF,eAEFmE,EAASvH,IAAI,SAACkE,EAAGyC,GAAJ,OAAUzC,gDAGbtH,EAAK+G,EAAawC,GACnC,GAAGvJ,EACC,OAAOA,EAAKoD,IAAI,SAACkE,EAAGyC,GAShB,OAPIrI,EAAAC,EAAAC,cAAA,UACIyB,IAAKkG,EAAS,oBAAsBQ,EACpCnK,MAAO0H,EAAEzB,IAERyB,EAAEW,mDAQJmC,EAAIY,GACnB,GAA6B,YAAzB3J,KAAKJ,MAAMjB,KAAKC,KAAoB,CACpC,IAAIgL,EAAMjG,EAAa,WAAa3D,KAAKqE,YAAc,IAAMrE,KAAKJ,MAAMjB,KAAKkL,gBAAkB,IAAMd,EACrGe,QAAQC,IAAIH,GACZ,IAIII,EAJA3G,EAAU,WAAa0F,EACvBU,EAAU,WAAaE,EACvBM,EAAYjK,KAAKJ,MAAMrB,MAAMkL,QAC7BS,GAAc,EAUlB,GARID,EAAU1H,OAAS,IACnB2H,GAAc,GAEdA,IACAF,EAAMC,EAAUvH,OAAO,SAAAuD,GACnB,OAAOA,EAAE2D,MAAQA,IAClB,IAEHI,EACA,IAAI,IAAAG,EACAnK,KAAKuG,UAAL4D,EAAA,GAAArK,OAAAyH,EAAA,EAAAzH,CAAAqK,EACK9G,EAAU2G,EAAIrL,MADnBmB,OAAAyH,EAAA,EAAAzH,CAAAqK,EAEKV,EAAU,CAACpG,IAFhBvD,OAAAyH,EAAA,EAAAzH,CAAAqK,EAAA,QAGWH,EAAIrL,KAAKgL,GAAT,IAHXQ,IAKF,MAAOC,GACL9F,aAAa4C,WAAWlH,KAAKJ,MAAMjB,KAAK6F,IAG3CwF,IACDhK,KAAKiF,aAAa8D,EAAIY,EAAIC,EAAKvG,EAASoG,GACxCK,QAAQC,IAAI,sDAKXhB,EAAIY,EAAIC,EAAKvG,EAASoG,GAAS,IAAAY,EAAArK,KACxCsK,IAAMC,IAAIX,GAAKY,KAAK,SAACR,GACjB,IAAI,IAAAS,EACAJ,EAAK9D,UAALkE,EAAA,GAAA3K,OAAAyH,EAAA,EAAAzH,CAAA2K,EACKpH,EAAU2G,EAAIrL,MADnBmB,OAAAyH,EAAA,EAAAzH,CAAA2K,EAEKhB,EAAU,CAACpG,IAFhBvD,OAAAyH,EAAA,EAAAzH,CAAA2K,EAAA,QAGWT,EAAIrL,KAAKgL,GAAT,IAHXc,IAKF,MAAOL,GACL9F,aAAa4C,WAAWmD,EAAKzK,MAAMjB,KAAK6F,IAE5C,OAAOwF,IACRQ,KAAK,SAACR,GACLK,EAAKzK,MAAML,aAAa,CACpBqK,IAAIA,EACJjL,KAAKqL,EAAIrL,0CAKZA,EAAMuJ,EAAQwC,EAAYC,EAAU/L,GACzC,OACIyB,EAAAC,EAAAC,cAAA,SACIC,UAAyB,UAAd7B,EAAKC,KAAmB,oBAAsB,eACzDL,MAAOoM,GAAsB,GAC7BC,IAAKF,EAAWG,OAASH,EAAWG,OAAS,GAC7CC,IAAKJ,EAAWK,OAASL,EAAWK,OAAQ,GAC5C/I,IAAKkG,EACLtJ,KAAMA,EACNgI,KAAM,KAAOjI,EAAK6F,GAAG8C,WACrBuB,SAAU7I,KAAKmF,qDAKbxG,EAAMuJ,EAAQyC,EAAU/L,GAClC,OACIyB,EAAAC,EAAAC,cAAA,SACIC,UAAyB,UAAd7B,EAAKC,KAAmB,oBAAsB,eACzDL,MAAOoM,GAAsB,GAC7B3I,IAAKkG,EACLtJ,KAAMA,EACNgI,KAAM,KAAOjI,EAAK6F,GAAG8C,WACrBuB,SAAU7I,KAAKmF,gDAKlBxG,EAAMuJ,EAAQyC,EAAU/L,GAAM,IAAAoM,EAAAhL,KACnC,OACIK,EAAAC,EAAAC,cAAC0K,EAAA,SAAD,CACIC,OACI,CACItB,IAAKjG,EACLwH,QAAS,CACLvB,IAAK,eACLwB,OAAQ,OACRC,OAAQ,SAACC,GAEL,OADAN,EAAK3F,YAAYiG,GACVA,EAAStJ,KAEpBuJ,QAAS,SAACD,GACN,OAAOA,EAAS3M,MAEpB6M,OAAQ,SAACC,GAEL,OADAA,EAASC,OAAO,SAAU,YACnBD,IAGfE,MAAO,CACH/B,IAAK,gBACLwB,OAAQ,MACRC,OAAQ,SAACC,GAEL,OADAN,EAAK3F,YAAYiG,GACVA,EAAStJ,KAEpBuJ,QAAS,SAACD,GACN,OAAOA,EAAS3M,OAGxBiN,OAAQ,CACJhC,IAAK,iBAAmBtF,aAAaC,QAAQ5F,EAAK6F,IAClD4G,OAAQ,MACRC,OAAQ,SAACC,GACLhH,aAAa4C,WAAWvI,EAAK6F,OAK7CxC,IAAKkG,EACLrB,eAAe,EACfD,KAAM,KAAOjI,EAAK6F,GAAG8C,WACrBuE,qBAAmB,8CAKnBlN,EAAMuJ,EAAQyC,EAAU/L,GAChC,OACIyB,EAAAC,EAAAC,cAAA,YACIyB,IAAKkG,EACL4D,KAAK,IACLtL,UAAU,eACVjC,MAAOoM,GAAsB,GAC7B/L,KAAMA,EACNiK,SAAU7I,KAAKmF,aACfyB,KAAM,KAAOjI,EAAK6F,GAAG8C,yDAMA,YAAzBtH,KAAKJ,MAAMjB,KAAKC,OAChB0F,aAAa4C,WAAWlH,KAAKJ,MAAMjB,KAAK6F,IACxCxE,KAAK8E,mBAAmB,EAAG,IAEkB,OAA7CR,aAAaC,QAAQvE,KAAKJ,MAAMjB,KAAK6F,KACrCxE,KAAKJ,MAAMT,mDAKf,IAAIR,EAAOqB,KAAKJ,MAAMjB,KAClBqD,EAAM,iBAAmBrD,EAAK6F,GAAG8C,WACjCyE,EAAWpN,EAAKC,KAChB+L,EAAWrG,aAAaC,QAAQ5F,EAAK6F,IAIzC,OAHI7F,EAAK6I,gBACLxH,KAAK0E,eAEFqH,GACH,IAAK,SACD,OAAO/L,KAAK2E,SAAShG,EAAMqD,GAC/B,IAAK,UACD,OAAOhC,KAAKgM,WAAWrN,EAAK,EAAGqD,GACnC,IAAK,SACD,OAAOhC,KAAKiM,SAAStN,EAAMqD,EAAKrD,EAAKwE,eAAgBwH,EAAUoB,GACnE,IAAK,QACD,OAAO/L,KAAK4E,SAASjG,EAAMqD,EAAK2I,EAAU,QAC9C,IAAK,OACD,OAAO3K,KAAKkM,cAAcvN,EAAMqD,EAAK2I,EAAUoB,GACnD,QACI,OAAO/L,KAAKmM,YAAYxN,EAAMqD,EAAK2I,EAAUoB,WArelCjL,aA0eZC,cAAQ1C,EAAiBG,EAAzBuC,CAA6CqD,8BC7etDgI,cAEF,SAAAA,EAAYxM,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoM,IACfvM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsM,GAAAjM,KAAAH,KAAMJ,KACDyM,SAAWxM,EAAKwM,SAAS9K,KAAdzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAChBA,EAAKyD,aAAezD,EAAKyD,aAAa/B,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAKyM,oBAAsBzM,EAAKyM,oBAAoB/K,KAAzBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAC3BA,EAAK0M,eAAiB1M,EAAK0M,eAAehL,KAApBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IALPA,4EAQN0D,GACT,IACIC,KAAKC,MAAMF,GACb,MAAOG,GACL,OAAO,EAEX,OAAO,yCAGI8I,EAAKC,GAChB,OACGpM,EAAAC,EAAAC,cAACmM,EAAD,CAAc1K,IAAK,iBAAmBwK,EAAK7N,KAAM8N,gDAIpCD,GAChB,IAAI7B,GAAW,EAIf,OAHIrG,aAAaC,QAAQiI,KACrB7B,GAAW,GClCE,SAACA,GACtB,OAAIA,EAEItK,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACI1C,MAAM,QACNI,UAAU,gBAKdH,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACI1C,MAAM,MACNI,UAAU,gBDwBVmM,CAAUhC,oCAGbrI,GAAU,IAAAT,EAAA7B,KACf,OAAOsC,EAAUP,IAAI,SAAC0K,GAClB,IAAID,EAAMC,EAASjI,GAAG8C,WACtB,OACIjH,EAAAC,EAAAC,cAACqM,EAAA,EAAD,CAAM5K,IAAK,QAAUwK,EAAKhM,WAA8B,IAAlBiM,EAASI,KAAiB,SAAW,IAC3ExM,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAU9K,IAAK,aAAewK,EAAKhI,GAAI,aAAegI,GAClDnM,EAAAC,EAAAC,cAACwM,EAAA,EAAD,CAAW/K,IAAK,cAAgBwK,GACzBC,EAASO,MAAM1F,WAAc,KAAOmF,EAAS9G,KAC9C8G,EAASQ,UAAYpL,EAAKyK,oBAAoBE,GAAO,IAE1D3K,EAAK0K,eAAeC,EAAKC,wCAQtC,OAAOzM,KAAKqM,SAASrM,KAAKJ,MAAMrB,MAAM+D,kBAnDtBxB,aAuDTC,cAAQ1C,EAAR0C,CAAyBqL,GE/DlCc,eACF,SAAAA,EAAYtN,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkN,IACfrN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoN,GAAA/M,KAAAH,KAAMJ,KACDuN,UAAYtN,EAAKsN,UAAU5L,KAAfzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAFFA,yEAKTf,GACN,OAAOkB,KAAKJ,MAAMf,YAAYC,oCAGzB,IAAA+C,EAAA7B,KACCoN,EAAapN,KAAKJ,MAAMrB,MAAMqD,OAAOS,QAAU,EAAI,gBAAkB,cACrEgL,EAAarN,KAAKJ,MAAMrB,MAAMqD,OAAOS,SAAWrC,KAAKJ,MAAMrB,MAAMqD,OAAOE,KAAKS,OAAS,gBAAkB,cACxG+K,EAActN,KAAKJ,MAAMrB,MAAMqD,OAAOS,OAAS,EAC/CkL,EAAcvN,KAAKJ,MAAMrB,MAAMqD,OAAOS,OAAS,EACrD,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAW,OAAS4M,EAC5BlL,QAAS,WAAOL,EAAKsL,UAAUG,KAD/B,QAKAjN,EAAAC,EAAAC,cAAA,UAAQC,UAAW,OAAS6M,EAC5BnL,QAAS,WAAOL,EAAKsL,UAAUI,KAD/B,gBAtBSzM,aAgCVC,eAAQ1C,EAAiBG,EAAzBuC,CAA6CmM,kCC/BtDM,oLAEE,OACInN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAACkN,GAAA,EAAD,KACEpN,EAAAC,EAAAC,cAACmN,GAAA,EAAD,KACIrN,EAAAC,EAAAC,cAAA,OAAKoN,IAAI,WAAWC,IAAI,gEAAgEpN,UAAU,qBACnGR,KAAKJ,MAAMrB,MAAMsP,YAEpBxN,EAAAC,EAAAC,cAACuN,GAAA,EAAD,mBACc9N,KAAKJ,MAAMrB,MAAMwP,SAC7B1N,EAAAC,EAAAC,cAAA,WAFF,YAGYP,KAAKJ,MAAMrB,MAAMyP,mBAb1BlN,aAsBNC,eAAQ1C,EAAR0C,CAAyByM,uBCjBlC7J,GAA2BC,OAAOC,SAASC,OAASF,OAAOC,SAASE,SAASC,MAAM,KAAK,GAAK,QAC7FiK,GAAW,2CAEXC,eAEF,SAAAA,EAAYtO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkO,IACfrO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoO,GAAA/N,KAAAH,KAAMJ,KAyBbuO,cAAgB,SAAA5P,GACfsB,EAAK0G,SAAS,CAAC6H,QAAS7P,IAClBsB,EAAKD,MAAMR,aAAY,GACF,OAAvBS,EAAKvB,MAAM8P,SAAkBvO,EAAK0G,SAAS,CAAE8H,SAAS,KA7BrCxO,EAgCnByO,kBAAoB,WAChBzO,EAAK0G,SAAS,CAAEgI,SAAU,aAjCX1O,EAoCnB2O,YAAc,WACV,OACInO,EAAAC,EAAAC,cAACkO,GAAA,EAAD,CACIC,MAAO,CACHC,QAAW,QACXC,SAAY,SACZC,aAAgB,iBAChBC,QAAW,OAEflO,KAAK,SACLmO,MAAM,QACNC,IAAKnP,EAAKoP,cACVC,QAASjB,GACTpF,SAAUhJ,EAAKsO,cACfG,kBAAmBzO,EAAKyO,qBAlDjBzO,EAuDnBsP,aAAe,WACX,OACI9O,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACIvC,EAAAC,EAAAC,cAAA,SACIC,UAAU,sBACVsI,QAAS,mBAFb,aAKAzI,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACV5B,KAAK,OACLgI,KAAK,kBACLiC,SAAUhJ,EAAKuP,aAEnB/O,EAAAC,EAAAC,cAAA,SACIC,UAAU,sBACVsI,QAAS,mBAFb,aAKAzI,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACV5B,KAAK,WACLgI,KAAK,kBACLiC,SAAUhJ,EAAKwP,iBAEnBhP,EAAAC,EAAAC,cAAA,aAhFOV,EA0HnByP,YAAc,SAAA/Q,GACV,OACI8B,EAAAC,EAAAC,cAACgP,GAAA,EAAD,CAAS3O,KAAK,KAAKR,MAAM,WA1H7BP,EAAK2O,YAAc3O,EAAK2O,YAAYjN,KAAjBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACnBA,EAAKsP,aAAetP,EAAKsP,aAAa5N,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAK2P,WAAa3P,EAAK2P,WAAWjO,KAAhBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAClBA,EAAKsO,cAAgBtO,EAAKsO,cAAc5M,KAAnBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACrBA,EAAKwP,eAAiBxP,EAAKwP,eAAe9N,KAApBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACtBA,EAAKuP,WAAavP,EAAKuP,WAAW7N,KAAhBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAClBA,EAAKyP,YAAczP,EAAKyP,YAAY/N,KAAjBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACnBA,EAAKvB,MAAQ,CACTmR,aAAe5P,EAAKD,MAAMrB,MAAM6P,QAChCsB,cAAe,GAEzB7P,EAAKoP,cAAgBpO,IAAM8O,YAbN9P,8EAgBH2G,GACZsD,QAAQC,IAAIvD,EAAMC,OAAOlI,OACzB+F,aAAa+B,QAAQ,YAAYG,EAAMC,OAAOlI,0CAGtCiI,GACRsD,QAAQC,IAAIvD,EAAMC,OAAOlI,OACzB+F,aAAa+B,QAAQ,YAAYG,EAAMC,OAAOlI,4CA8DpC,IAAAsD,EAAA7B,KACVsE,aAAa+B,QAAQ,kBAAmBuJ,KAAKC,OAC7C7P,KAAKuG,SAAS,CAACmJ,cAAgB,IAC/B,IAAII,EAAkBtM,KAAK0C,UAAU5B,cAAc/B,OAAO+E,WACtDyI,EAAUzL,aACdgG,IAAM0F,KAAKrM,GAAY,cACfoM,EAAS,CAAEE,QAAS,CACpBC,iBAAkBJ,EAClBK,eAAgB,sBAInB3F,KAAK,SAAAR,GAiBF,OAhBAoG,IAAK,CACDC,KAAM,UACNC,MAAO,WACP3K,KAAM,0CACN4K,qBAAqB,EACrBC,YAAY,EACZC,QAAQ,EACRC,MAAO,OAEX7O,EAAK0E,SAAS,CAACmJ,cAAgB,IAC/BiB,WAAW,WACNrM,aAAasM,QACbD,WAAW,WACR/M,OAAOC,SAASgN,UAChB,MACL,KACI7G,IACR8G,MAAM,SAAC9G,EAAK+G,GACXjH,QAAQC,IAAIC,EAAK+G,GACjBlP,EAAK0E,SAAS,CAACmJ,cAAgB,IAC/BU,IAAK,QAAS,wBAAyB,4CAW/C,OACI/P,EAAAC,EAAAC,cAACqC,EAAA,SAAD,OACK5C,KAAKJ,MAAMrB,MAAM6P,SAAUpO,KAAKwO,cACjCnO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVR,KAAKJ,MAAMrB,MAAMyS,QAAQhR,KAAKmP,eAC/B9O,EAAAC,EAAAC,cAAA,UACI2B,QAASlC,KAAKwP,WACdhP,UAAW,sBAAyBR,KAAKJ,MAAMrB,MAAMyS,OAAS,UAAY,aAE1EC,UAAUjR,KAAKJ,MAAMrB,MAAMyS,QAE7BhR,KAAK1B,MAAMoR,aAAerP,EAAAC,EAAAC,cAACgP,GAAA,EAAD,CAAS3O,KAAK,KAAKR,MAAM,UAAa,GAClEC,EAAAC,EAAAC,cAAA,gCA/ICO,aAuJNC,eAAQ1C,EAAiBG,EAAzBuC,CAA6CmN,iOChJ5D,IAAMgD,GAAsBtN,OAAOC,SAAS1B,KAAKjB,QAAQ,WAAW,gBAI9DiQ,eAEF,SAAAA,EAAYvR,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmR,IACftR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqR,GAAAhR,KAAAH,KAAMJ,KAYVwR,WAAa,SAACzS,GACVkB,EAAKD,MAAMlB,cAAcC,GACzBkB,EAAKD,MAAMb,eAAec,EAAKD,MAAMrB,MAAM+D,WACvCgC,aAAaC,QAAQ,mBACrB1E,EAAKD,MAAMV,gBAAgBoF,aAAaC,QAAQ,mBAEpD1E,EAAKD,MAAMf,YAAY,GACvByF,aAAa+B,QAAQ,WAAY1H,EAAKqP,SACtC1J,aAAa+B,QAAQ,cAAe1H,EAAK0S,KACzC,IAAIC,EAAa,GACbC,EAAa,GACQtI,MAAMC,QAAQvK,EAAK6S,iBAExC7S,EAAK6S,cAAgB,CAAC7S,EAAK6S,gBAE/B7S,EAAK6S,cAAc3J,QAAQ,SAAClF,GACxBA,EAAE8J,SAAS5E,QAAQ,SAAC4J,EAAG/I,GACnB4I,EAAWtK,KAAKyK,EAAEjN,IAClB+M,EAAWvK,KAAKyK,EAAE7S,KAAK8S,mBAG/BpN,aAAa+B,QAAQ,aAAciL,GACnChN,aAAa+B,QAAQ,aAAckL,GACnC1R,EAAK0G,gWAALoL,CAAA,GACOhT,IAEP,IAAIiT,EAAc,CACdC,KAAKC,SAASxK,SAAS,IAAIyK,MAAM,GAAGC,UAAU,EAAG,GACjDH,KAAKC,SAASxK,SAAS,IAAIyK,MAAM,GAAGC,UAAU,EAAG,GACjDH,KAAKC,SAASxK,SAAS,IAAIyK,MAAM,GAAGC,UAAU,EAAG,IAErD1N,aAAa+B,QAAQ,eAAgBuL,EAAY7J,KAAK,MACtDzD,aAAa+B,QAAQ,mBAAoBuJ,KAAKC,OAC9CvL,aAAa+B,QAAQ,YAAa,kBA9CnBxG,EAiDnBoS,gBAAkB,SAAChQ,GACfpC,EAAK0G,SAAS,CACV2L,cAAejQ,KAjDnBpC,EAAKsS,SAAWtS,EAAKD,MAAMwS,MAAMC,OAAOF,SACxCtS,EAAKkO,SAAWlO,EAAKD,MAAMwS,MAAMC,OAAOC,SACxCzS,EAAK0S,cAAgB1S,EAAK0S,cAAchR,KAAnBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACrBA,EAAK2S,gBAAkB3S,EAAK2S,gBAAgBjR,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACvBA,EAAK4S,aAAe5S,EAAK4S,aAAalR,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAKvB,MAAQ,CACToU,aAAa,EACbC,WAAW,GATA9S,+EAwDf,IAAM+S,EAAe5S,KAAK1B,MAAMuU,YAChC7S,KAAKuG,SAAS,CACVsM,aAAcD,gDAIF,IAAA/Q,EAAA7B,KAChBA,KAAKJ,MAAMP,aAAa,IACxBW,KAAKJ,MAAMN,eAAe,CAACwT,YAAW,IAClCxO,aAAaC,QAAQ,YACjBD,aAAaC,QAAQ,aAAevE,KAAK+N,UACzCzJ,aAAasM,QAGrBtM,aAAa+B,QAAQ,UAAWrG,KAAK+N,UACrCzJ,aAAa+B,QAAQ,cAAerG,KAAKmS,UACzC7H,IAAMC,IAAI2G,GAAU,WACf1G,KAAK,SAAAR,GACFnI,EAAKuP,WAAWpH,EAAIrL,MACpBkD,EAAK0E,SAAS,CAAEoM,WAAU,MAE7B7B,MAAM,SAAAC,GACHjH,QAAQC,IAAIgH,GACZX,IAAK,QAAS,wBAAyB,SACvCtG,QAAQC,IAAIlI,EAAKvD,SAE/BqS,WAAW,WACK9O,EAAK0E,SAAS,CAAEwM,MAAM,KAvF1B,+CA4FN,OACI1S,EAAAC,EAAAC,cAACyS,EAAD,6CAKJ,OACI3S,EAAAC,EAAAC,cAAC0S,EAAD,uCAKJ,OACI5S,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,KAAK1B,MAAMuU,YAAc,yBAA0B,kBAC/DxS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACXH,EAAAC,EAAAC,cAAC2S,GAAD,MACClT,KAAK1B,MAAMqU,UAAY3S,KAAKyS,eAAiB,GACL,IAAtCzS,KAAKJ,MAAMrB,MAAM+D,UAAUC,OAAe,GAAMlC,EAAAC,EAAAC,cAAC4S,GAAD,OAEvD9S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+DACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkB0B,QAASlC,KAAKuS,eAC7CvS,KAAK1B,MAAMuU,YAAcxS,EAAAC,EAAAC,cAACuC,EAAA,EAAD,MAAmBzC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,OAER,IAAtC9C,KAAKJ,MAAMrB,MAAM+D,UAAUC,OAAe,GAAMlC,EAAAC,EAAAC,cAAC6S,EAAD,MACnD/S,EAAAC,EAAAC,cAAC8S,GAAD,OAEJhT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAAkCwB,IAAK,aAAahC,KAAK1B,MAAMyP,UAC1E1N,EAAAC,EAAAC,cAAC+S,EAAD,MACCtT,KAAK1B,MAAMqU,UAAY3S,KAAKwS,kBAAoB,aAvHtD1R,aAiIJC,eAAQ1C,EAAiBG,EAAzBuC,CAA6CoQ,wlBCrJ5D,IAAMoC,GAAe,CACjB1F,WAAW,YACXE,SAAS,YACTC,QAAQ,YACR1L,UAAW,CAAC,CACRxD,MAAO,EACPsD,QAAS,KACToC,GAAI,EACJgD,gBAAgB,EAChByF,WAAW,EACXD,MAAO,EACPH,MAAM,EACNlH,KAAM,UACN/G,KAAM,OACN8L,YAAY,IAEhBrI,OAAQ,GACRmR,QAAS,GACTvG,UAAW,GACX+D,QAAQ,EACR5C,SAAS,EACTrL,UAAW,KACX0Q,WAAY,GACZzQ,KAAM,UACNpB,OAAQ,CACJE,KAAM,CAAC,CACHG,MAAM,EACNG,QAAQ,sBAEZC,OAAQ,GAEZqR,MAAM,GAENjK,QAAQ,IAGNkK,GAAgB,SAAChV,GACnB,GAAIsK,MAAMC,QAAQvK,GACd,OAAOA,EAEd,IAAIiD,EAAS,GAQb,MAPqB,kBAATjD,GACXiD,EAAOoF,KAAK,CACX/E,MAAM,EACNG,QAAQzD,EAAKyD,QACbqK,SAAS9N,EAAK8N,WAGT7K,GAGFgS,GAAe,SAACjV,GAAS,IAAAkV,EAarBC,EAAW,SAACrC,EAAG9O,GACjB,OAAO8O,EAAE1P,IAAI,SAAA0P,GAAC,OAbF,SAACA,EAAE9O,GACf,OAAOoR,GAAA,GACAtC,EADP,CAEIjN,GAAIuB,SAAS0L,EAAEjN,IACfwI,MAAOjH,SAAS0L,EAAEzE,OAClBpO,KAAMqE,EAAgBwO,GACtB3S,MAAQ6D,EAAEV,MAAQ,EAClBG,QAASO,EAAEP,QACXsI,aAAa+G,EAAEtO,gBAAiBsO,EAAEtO,eAClC0J,MAAM,IAIQmH,CAAQvC,EAAE9O,MAK/B6O,EAFWmC,GAAchV,EAAK6S,eAEPzP,IAAI,SAACY,EAAE+F,GACjC,OAAOqL,GAAA,GACHpR,EADJ,CAEC8J,SAAUqH,EAASnR,EAAE8J,SAAU,CAACrK,QAAQO,EAAEP,QAASH,MAAOyG,QAEzD3G,IAAI,SAAAY,GAAC,OAAIA,EAAE8J,WAEX,OAAOoH,EAAA,IAAG1N,OAAH8N,MAAAJ,EAAA/T,OAAAsG,EAAA,EAAAtG,CAAa0R,KAGlB0C,GAAiB,SAACvV,GAEvB,IAAMiD,EAAS+R,GAAchV,EAAK6S,eAC/B,OAAOoC,GAAahS,GAAQc,OAAO,SAAAuD,GAAC,OAAIA,EAAEuB,iBAAgBzF,IAAI,SAAA0P,GAAC,OAAIA,EAAEjN,MAanE2P,GAAgB,SAACxV,GACnB,OAAOiV,GAAajV,GAAM+D,OAAO,SAAAuD,GAAC,OAAIA,EAAEgH,YAAWlL,IAAI,SAAAkE,GAAC,OAAIA,EAAEzB,MAG5D4P,GAAoB,SAACC,EAAMvV,GAC7B,IAAIwV,EAAiB,GA0DrB,OAzDaD,EAAKtS,IAAI,SAAAkE,GAClB,IAAI4G,GAAO,EACP0H,GAAY,EAKhB,GAJGtO,EAAEuO,aACDD,EAAYtO,EAAEuO,WACd3H,GAAO,GAER0H,EAAU,CACT,IAAIE,EAUJ,GATIF,EAAU,gBAAgBtM,SAAS,MAAQ,IAE3CwM,GADAA,EAAeF,EAAU,gBAAgBvQ,MAAM,MACnBjC,IAAI,SAAA2F,GAI5B,OAHKE,MAAMF,KACPA,EAAI3B,SAAS2B,IAEVA,KAGkC,OAA7CpD,aAAaC,QAAQgQ,EAAU9H,UAAoB,CACnD,IAAIxN,EAASqF,aAAaC,QAAQgQ,EAAU9H,UACxCnJ,EAAamR,KACbxV,EAASuE,KAAKC,MAAMgR,IAEnB7M,MAAM6M,KACPxV,EAASA,EAAOqI,YAEhBmN,EAAaxM,SAAShJ,KACtB4N,GAAO,GAEP5N,IAAWwV,IACX5H,GAAO,GAG4C,OAAvDvI,aAAaC,QAAQwB,SAASwO,EAAU9H,aACxCI,GAAO,EACPvI,aAAa4C,WAAWjB,EAAEzB,MAG9B1F,GACGmH,EAAEnH,QAAUA,IACX+N,GAAO,GAGV/N,GAAU+N,KACXvI,aAAa4C,WAAWjB,EAAEzB,IACtB+P,IAI2B,IAHPD,EAAeI,KAAK,SAAAC,GACpC,OAAO5O,SAAS4O,EAAEnQ,MAAQuB,SAASwO,EAAU9H,YAE/BI,OACdA,GAAO,IAKnB,OADAyH,EAAetN,KAAf+M,GAAA,GAAwB9N,EAAxB,CAA2B4G,KAAKA,EAAMjO,KAAMqE,EAAgBgD,MACrD8N,GAAA,GAAK9N,EAAZ,CAAe4G,KAAKA,EAAMjO,KAAMqE,EAAgBgD,QAKlD/G,GAAkB,SAACZ,GACrB,OAAOA,GAGLsW,GAAiB,SAACtS,EAAW3D,EAAMkW,GAkBrC,OAjBiBvS,EAAUP,IAAI,SAAAkE,GAC3B,IAAIhH,EAAS,KAEb,GAAI4V,EAAS,CAET5V,EADSN,EAAK4F,QAAQ0B,EAAEzB,KACI,KAC5B,IACIvF,EAASuE,KAAKC,MAAMxE,GACtB,MAAOmL,IACTnL,EAAU8G,SAAS9G,GAAQ6V,MAAQ/O,SAAS9G,GAAUA,EAE1D,MAAO,CACHuF,GAAIyB,EAAEzB,GACNvF,OAAQA,EACRgO,UAAWhH,EAAEgH,cAMnB5N,GAAe,WACjB,IAAImF,EAAKxB,OAKT,OAHAwB,GADAA,EAAKA,EAAGR,MAAM,MACNjC,IAAI,SAAAkE,GACR,OAAOA,EAAE+L,UAAU,EAAG,KACvBD,MAAM,EAAE,IACDhK,KAAK,MAGb5I,GAAkB,SAACqU,EAASlR,GAC9B,IAAIyS,EAAaX,GAAkB9R,GAAW,GAAOI,OAAO,SAAAuD,GAAC,OAAIA,EAAE4G,OACnE2G,EAAUA,EAAQ9Q,OAAO,SAAAuD,GAAC,OAAIA,EAAEgH,YAAWvK,OAAO,SAAAuD,GAAC,OAAiB,OAAbA,EAAEhH,SACzD,IAAI+V,EAAmBD,EAAWhT,IAAI,SAAAkE,GAClC,IAAI0E,EAAW6I,EAAQ9Q,OAAO,SAAAuS,GAAC,OAAIA,EAAEzQ,KAAOyB,EAAEzB,KAAIzC,IAAI,SAAAkT,GAAC,OAAIA,EAAEhW,SAE7D,OADA0L,IAAYA,EAASpI,OAAS,GACvBwR,GAAA,GACA9N,EADP,CAEI0E,SAAUA,MAEfjI,OAAO,SAAAuD,GAAC,OAAIA,EAAEgH,YAGjB,OAFyB+H,EAAiBtS,OAAO,SAAAuD,GAAC,OAAIA,EAAE0E,WACtBpI,QAAUyS,EAAiBzS,QAI3D2S,GAAa,SAAClP,EAASrH,GACzB,OAAOoV,GAAA,GACA/N,EADP,CAEIrH,UCjNFwW,GAAQC,aD4NkB,WAAkC,IAP5CpP,EAASyD,EArIX9K,EA4IaL,EAAiC+W,UAAA9S,OAAA,QAAA6F,IAAAiN,UAAA,GAAAA,UAAA,GAAzB9B,GAAc+B,EAAWD,UAAA9S,OAAA,EAAA8S,UAAA,QAAAjN,EAC9D,OAAOkN,EAAO1W,MACV,IAAK,iBACD,OAAOmV,GAAA,GACAzV,EADP,CAEIuP,WAAYyH,EAAO3W,KAAKiI,KACxBmH,SAAUuH,EAAO3W,KAAKoP,SACtBC,QAASsH,EAAO3W,KAAKqP,QACrB1L,UAAWsR,GAAa0B,EAAO3W,MAC/B8U,WAAYS,GAAeoB,EAAO3W,MAClCiD,QAtJIjD,EAsJe2W,EAAO3W,KAlJ/B,CACHmD,KAHQ6R,GAAchV,EAAK6S,eACVzP,IAAI,SAACkE,EAAEyC,GAAO,MAAO,CAAEzG,MAAQyG,EAAI,EAAItG,QAAS6D,EAAE7D,WAGnEC,OAAQ,IAiJA4K,UAAWkH,GAAcmB,EAAO3W,QAExC,IAAK,kBACD,OAAOoV,GAAA,GACAzV,EADP,CAEIkV,QAASoB,GAAeU,EAAO3W,KAAM2F,cAAc,KAE3D,IAAK,gBACD,OAAOyP,GAAA,GACAzV,EADP,CAEIkV,QAASoB,GAAetW,EAAMkV,QAAS8B,EAAOrW,QAAQ,KAE9D,IAAK,mBACD,OAAO8U,GAAA,GACAzV,EADP,CAEIyE,UAAW7D,GAAgBoW,EAAO3W,QAE1C,IAAK,eACD,OAAOoV,GAAA,GACAzV,EADP,CAEIgE,UAAW8R,GAAkB9V,EAAMgE,UAAWgT,EAAOxW,OACrD8C,OAAOmS,GAAA,GAAKzV,EAAMsD,OAAZ,CAAoBS,OAAQiT,EAAOxW,UAEjD,IAAK,mBACD,OAAOiV,GAAA,GACAzV,EADP,CAEI8P,QAASjP,GAAgBb,EAAMkV,QAASlV,EAAMgE,WAC9C0O,QAAQ,IAEhB,IAAK,eACD,OAAO+C,GAAA,GACAzV,EADP,CAEI0S,OAAQsE,EAAO3W,OAEvB,IAAK,gBACD,OAAOoV,GAAA,GACAzV,EADP,CAEI0E,KAAM3D,GAAaiW,EAAO3W,QAElC,IAAK,iBACD,OAAOoV,GAAA,GACAzV,EADP,CAEIoV,MAAOwB,GAAW5W,EAAMoV,MAAO4B,EAAO3W,QAE9C,IAAK,gBACD,OAAOoV,GAAA,GACAzV,EADP,CAEImL,SAjEMzD,EAiEgB1H,EAAMmL,QAjEbA,EAiEsB6L,EAAO3W,KAhEpDqH,EAAQzD,OAAS,EACV,CAACkH,GAEZ,GAAAtD,OAAArG,OAAAsG,EAAA,EAAAtG,CAAWkG,GAAX,CAAoByD,OA+DhB,QACI,OAAOnL,KC1QJiX,oLAVP,OACClV,EAAAC,EAAAC,cAACiV,EAAA,EAAD,CAAUL,MAAOA,IACd9U,EAAAC,EAAAC,cAACkV,EAAA,EAAD,KACIpV,EAAAC,EAAAC,cAACmV,EAAA,EAAD,CAAOC,KAAOC,qCAAmCC,OAAS,SAAAjW,GAAK,OAAIS,EAAAC,EAAAC,cAACuV,GAADhW,OAAAiW,OAAA,CAAM/T,IAAI,QAAWpC,gBANtFkB,aCAEkV,QACW,cAA7BpS,OAAOC,SAASoS,UAEe,UAA7BrS,OAAOC,SAASoS,UAEhBrS,OAAOC,SAASoS,SAAS7D,MACvB,kECXN,GAFA8D,EAAQ,KAAUC,SAEd7R,aAAaC,QAAQ,cAAc,CACnC,IAAI6R,GAAU9R,aAAaC,QAAQ,cAAcP,MAAM,KACnDqS,GAAU/R,aAAaC,QAAQ,cAAcP,MAAM,KACnDsS,GAAaF,GAAQrU,IAAI,SAACkE,EAAEyC,GAC5B,MAAO,CAAClE,GAAIyB,EAAGrH,KAAMyX,GAAQ3N,MAC9BhG,OAAO,SAAAuD,GAAC,MAAe,UAAXA,EAAErH,OACb0X,GAAW/T,OAAS,GACpB+T,GAAWzO,QAAQ,SAAA5B,GAAC,OAAI3B,aAAa4C,WAAWjB,EAAEzB,MAG1D+R,IAASV,OAAOxV,EAAAC,EAAAC,cAACiW,GAAD,MAAUC,SAASC,eAAe,SDgH5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrM,KAAK,SAAAsM,GACjCA,EAAaC","file":"static/js/main.b9e65f15.chunk.js","sourcesContent":["export const mapStateToProps = (state) => {\n    return {\n        value: state\n    }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        loadQuestions: (data) => dispatch({type:\"LOAD QUESTIONS\", data:data}),\n        changeGroup: (data) => dispatch({type:\"CHANGE GROUP\", group:data}),\n        restoreAnswers: (data) => dispatch({type:\"RESTORE ANSWERS\", data:data}),\n        reduceAnswer: (data) => dispatch({type:\"REDUCE ANSWER\", answer:data}),\n        reduceDataPoint: (data) => dispatch({type:\"REDUCE DATAPOINT\", data:data}),\n        checkSubmission: () => dispatch({type:\"CHECK SUBMISSION\"}),\n        submitState: (data) => dispatch({type:\"SUBMIT STATE\", data:data}),\n        generateUUID: (data) => dispatch({type:\"GENERATE UUID\", data:data}),\n        changeSettings: (data) => dispatch({type:\"PAGES SETTINGS\", data:data}),\n        storeCascade: (data) => dispatch({type:\"STORE CASCADE\", data:data})\n    }\n}\n\n","import React from 'react'\nimport {\n    connect\n} from 'react-redux'\nimport {\n    mapStateToProps,\n    mapDispatchToProps\n} from '../reducers/actions.js'\nimport {\n    css\n} from '@emotion/core'\nimport BeatLoader from 'react-spinners/BeatLoader'\nimport '../style/style.css'\n\nconst pulseloader = css ` margin: 0 auto; border-color: red; `\n\nclass Loading extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            color: '#007bff'\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.styles}>\n                 <h3 className=\"mt-2\">\n                   Loading Forms\n                </h3>\n            <BeatLoader\n                css={ pulseloader }\n                sizeUnit={ \"px\" }\n                size = { 20 }\n                color = { this.state.color }\n            />\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\n","import { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\nimport React, { Component } from 'react'\nimport Loading from '../util/Loading'\n\nclass GroupButtons extends Component {\n\n    constructor(props) {\n        super(props);\n        this.showQuestion = this.showQuestion.bind(this)\n        this.getQuestionList = this.getQuestionList.bind(this)\n        this.listClass = \"list-group-item list-group-item-action \"\n        this.getUrl = this.getUrl.bind(this)\n        this.state = {\n          _showQuestion: ''\n        };\n    }\n\n    getUrl = ((group) => (\n        \"#\" + group.replace(/ /g,\"-\").toLowerCase()\n    ))\n\n    showQuestion(group) {\n        this.props.changeGroup(group)\n    }\n\n    componentDidMount() {\n    }\n\n    getQuestionList(groups){\n        return groups.list.map((group) => (\n                <div className=\"list-group list-group-flush\" key={'group-' + group.index}>\n                <a onClick={() => {this.showQuestion(group.index)}}\n                href={this.getUrl(group.heading)}\n                className={(group.index === groups.active ?\n                        this.listClass + \" bg-current\" : this.listClass + \" bg-light\"\n                )}\n                >\n                    { group.heading }\n                </a>\n                </div>\n        ))\n    }\n\n    getLoading = () => (<Loading styles={'sidebar-loading'}/>)\n\n    render() {\n        return (\n            this.props.value.questions.length === 1 ?\n            this.getLoading() : this.getQuestionList(this.props.value.groups)\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupButtons);\n","import { connect } from 'react-redux'\nimport { mapStateToProps } from '../reducers/actions.js'\nimport React, { Component, Fragment } from 'react'\nimport Loading from '../util/Loading'\n\nclass GroupHeaders extends Component {\n\n    constructor(props) {\n        super(props);\n        this.getHeader = this.getHeader.bind(this)\n        this.getLoading = this.getLoading.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    getHeader = (groups) => {\n        let active = groups.list.filter(g => g.index === groups.active)\n        return active.map((group) => (\n            <Fragment key={group.index}>\n            <h2 className=\"mt-2\" >{group.heading}</h2>\n            <p>{group.heading}</p>\n            </Fragment>\n        ))\n    }\n\n    getLoading = () => (<Loading styles={'header-loading'}/>)\n\n    render() {\n        return (\n            this.props.value.questions.length === 1 ?\n            this.getLoading() : this.getHeader(this.props.value.groups)\n        )\n    }\n\n}\n\nexport default connect(mapStateToProps)(GroupHeaders);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { mapStateToProps } from '../reducers/actions.js'\nimport {\n    FaThumbtack,\n} from 'react-icons/fa'\n\nclass DataPoint extends Component {\n\n    render() {\n        return (\n            <Fragment>\n            <div className=\"data-point\">\n                <h3 className=\"data-point-name\">\n                    <FaThumbtack color=\"#9ea4a8\" className=\"data-point-icon\"/>\n                    {this.props.value.datapoint}\n                </h3>\n                <span className=\"data-point-id\">{this.props.value.uuid}</span>\n            </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(DataPoint);\n","export const getQuestionType = (props) => {\n    let qtype = props.type\n    if (props.validationRule) {\n        qtype = (props.validationRule.validationType === \"numeric\" ? \"number\" : \"text\")\n    }\n    if (props.options) {\n        qtype = \"option\"\n    }\n    switch (qtype) {\n        case \"signature\": break\n        case \"photo\": return \"photo\"\n        case \"number\": return \"number\"\n        case \"option\": return \"option\"\n        case \"cascade\": return \"cascade\"\n        case \"geo\": return \"text\"\n        case \"date\": return \"date\"\n        default:\n            return \"text\"\n    }\n    return qtype\n}\n\nexport const isJsonString = (str) => {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\nimport axios from 'axios';\nimport { isJsonString } from  '../util/QuestionHandler.js'\nimport { PROD_URL } from '../util/Environment'\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\n\nconst API_ORIGIN = (PROD_URL ? ( window.location.origin + window.location.pathname.split('/')[1] + \"-api\" ) : process.env.REACT_APP_API_URL) + \"/\";\nconst pathurl = (PROD_URL ? 2 : 1);\n\nregisterPlugin(FilePondPluginImagePreview);\n\nclass QuestionType extends Component {\n\n    constructor(props) {\n        super(props)\n        this.instanceUrl = window.location.pathname.split('/')[pathurl]\n        this.value = localStorage.getItem(this.props.data.id)\n        this.other = localStorage.getItem(\"other_\" + this.props.data.id)\n        this.state = {\n            value: this.value ? this.value : '',\n            other: this.other ? this.other : ''\n        }\n        this.setDpStorage = this.setDpStorage.bind(this);\n        this.getRadio = this.getRadio.bind(this);\n        this.getPhoto = this.getPhoto.bind(this);\n        this.renderRadio = this.renderRadio.bind(this);\n        this.getCascadeDropdown = this.getCascadeDropdown.bind(this);\n        this.renderCascade = this.renderCascade.bind(this);\n        this.renderCascadeOption = this.renderCascadeOption.bind(this);\n        this.fetchCascade = this.fetchCascade.bind(this);\n        this.limitCascade = 0;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleOther = this.handleOther.bind(this);\n        this.handlePhoto = this.handlePhoto.bind(this);\n        this.handleCascadeChange = this.handleCascadeChange.bind(this);\n        this.handleGlobal = this.handleGlobal.bind(this);\n    }\n\n    handleGlobal(questionid, qval){\n        if (qval === \"\" || qval === null){\n            this.props.restoreAnswers(this.props.value.questions)\n        } else {\n            this.props.restoreAnswers(this.props.value.questions)\n        }\n        this.props.changeGroup(this.props.value.groups.active)\n        this.props.checkSubmission()\n    }\n\n    handleCascadeChange(targetLevel, text, id, value) {\n        let vals;\n        let storage = {id:targetLevel,text:text, option:parseInt(value)}\n        if (localStorage.getItem(id)) {\n            let multipleValue = JSON.parse(localStorage.getItem(id))\n            let current = multipleValue.filter(x => x.id < targetLevel);\n            vals = JSON.stringify([...current, storage])\n        } else {\n            vals = JSON.stringify([storage])\n        }\n        if (targetLevel !== 0){\n            localStorage.setItem(this.props.data.id, vals)\n            this.handleGlobal(this.props.data.id, vals)\n        }\n        return true\n    }\n\n    handlePhoto(image) {\n        let id = this.props.data.id\n        localStorage.setItem(id, image)\n        this.setState({value: image})\n        this.handleGlobal(id, image)\n    }\n\n    handleChange(event) {\n        let id = this.props.data.id\n        let value = event.target.value\n        let target = event.target.id;\n        if (target.split(\"_\")[0]) {\n            return this.handleOther(target, value);\n        }\n        if (this.props.data.type === \"cascade\") {\n            let ddindex = event.target.selectedIndex\n            let text = event.target[ddindex].text\n            let targetLevel = parseInt(event.target.name.split('-')[1]) + 1\n            this.handleCascadeChange(targetLevel, text, id, value)\n            if (this.limitCascade > targetLevel) {\n                this.getCascadeDropdown(value, targetLevel)\n            }\n        }\n        else if (this.props.data.options && this.props.data.options.allowMultiple)  {\n            let multipleValue = []\n            if (localStorage.getItem(id)) {\n                multipleValue = JSON.parse(localStorage.getItem(id))\n            }\n            if (multipleValue.indexOf(value) === -1) {\n                multipleValue.push(value)\n            } else {\n\t\t\t\tmultipleValue.splice(multipleValue.indexOf(value), 1)\n            }\n\t\t\tif (multipleValue.length > 0) {\n            \tlocalStorage.setItem(id, JSON.stringify(multipleValue))\n            \tthis.setState({value: multipleValue})\n                this.handleGlobal(id, value)\n\t\t\t} else {\n\t\t\t\tlocalStorage.removeItem(id)\n            \tthis.setState({value: \"\"})\n\t\t\t}\n            if(this.props.data.options.allowOther) {\n                if (value === \"Other Option\" && event.target.checked){\n                    let otherClass = \"other_\" + this.props.data.id.toString();\n                    this.setState({[otherClass]: true});\n                }\n                if (value === \"Other Option\" && !event.target.checked){\n                    let otherClass = \"other_\" + this.props.data.id.toString();\n                    this.setState({[otherClass]: false});\n                }\n            }\n            this.handleGlobal(id, value)\n        } else {\n            localStorage.setItem(id, value)\n            this.setState({value: value})\n            this.handleGlobal(id, value)\n        }\n        if(value === \"\") {\n            this.setState({value: value})\n            localStorage.removeItem(id)\n            this.handleGlobal(id, value)\n        }\n        if (this.props.data.localeNameFlag) {\n            let a = JSON.parse(localStorage.getItem('_dpOrder'));\n            let names = []\n            a.map((b) => {\n                let c = localStorage.getItem(b)\n                if (c) {\n                    if (isJsonString(c) && isNaN(c)) {\n                        let cascade = JSON.parse(c).map(x => x.text)\n                        cascade.forEach(name => {\n                            names.push(name)\n                        });\n                    } else {\n                        names.push(c)\n                    }\n                }\n                return true\n            })\n            let edited = names.join(\" - \")\n            localStorage.setItem(\"_dataPointName\", edited)\n            this.props.reduceDataPoint(localStorage.getItem('_dataPointName'))\n        }\n    }\n\n    handleOther(target, value) {\n        let history = \"\";\n        if (localStorage.getItem(target)) {\n            history = localStorage.getItem(target);\n        }\n        history = value;\n        localStorage.setItem(target, history);\n        this.setState({other:history});\n    }\n\n    setDpStorage () {\n        if (localStorage.getItem('_dpOrder')) {\n            let a = JSON.parse(localStorage.getItem('_dpOrder'));\n            if (!a.includes(this.props.data.id)) {\n                a.push(this.props.data.id)\n            }\n            localStorage.setItem('_dpOrder', JSON.stringify(a));\n        } else {\n            localStorage.setItem('_dpOrder', JSON.stringify([this.props.data.id]));\n        }\n\n    }\n\n    getRadio (data, unique) {\n        let opts = data.options\n        if (opts.allowMultiple === undefined) {\n            opts = {...opts, allowMultiple: false}\n        }\n        let radioType = (opts.allowMultiple ? \"checkbox\" : \"radio\")\n        let ao = opts.allowOther;\n        if (ao) {\n            if ( opts.option.length > 1 ) {\n                let oi = opts.option.length + 1;\n                let main = opts.option.map((opt, i) => this.renderRadio(false, opt, i, data.id, radioType, unique))\n                let other = this.renderRadio(true, {text: \"Other\", value:\"Other Option\"}, oi, data.id, radioType, unique)\n                return [...main, other];\n            }\n            let main = this.renderRadio(false, opts.option, 0, data.id, radioType, unique)\n            let other = this.renderRadio(true, {text: \"Other\", value:\"Other Option\"}, 1 , data.id, radioType, unique)\n            return [...main, other];\n        }\n        return (\n            opts.option.length > 1\n            ?\n            (opts.option.map((opt, i) => this.renderRadio(false, opt, i, data.id, radioType, unique)))\n            :\n            (this.renderRadio(false, opts.option, 0, data.id, radioType, unique))\n        )\n    }\n\n    renderRadio (o, opt, i, id, radioType, unique) {\n        let checked = () => (localStorage.getItem(id) === opt.value)\n\t\tif (radioType === \"checkbox\" && this.state.value.indexOf(opt.value) >= 0) {\n\t\t\tchecked = () => (true)\n\t\t}\n        if (o) {\n            let oname = \"other_\"+id.toString();\n            return (\n                <div key={unique + '-div-radio-' + i.toString()} >\n                    <div className=\"form-check\" >\n                        <input\n                            key={unique + '-radio-' + i.toString()}\n                            className=\"form-check-input\"\n                            type={radioType}\n                            name={id}\n                            value={opt.value}\n                            onChange={this.handleChange}\n                            checked={checked()}\n                        />\n                        <label\n                            className=\"form-check-label badge badge-secondary\"\n                            htmlFor={\"input-\" + (id).toString()}>\n                            {opt.text}\n                        </label>\n                    </div>\n                <hr/>\n                    <div className={checked() ? \"\":\"hidden\"}>\n                        <label\n                            className=\"form-label\"\n                            htmlFor={oname}>\n                            Other Answer:\n                        </label>\n                        <input\n                            className=\"form-control\"\n                            key={unique + \"-radio-other-\" + i.toString()}\n                            value={this.state.other}\n                            type=\"text\"\n                            name={oname}\n                            id={oname}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"form-check\"\n                 key={unique + '-div-radio-' + i.toString()}\n            >\n                <input\n                    key={unique + '-radio-' + i.toString()}\n                    className=\"form-check-input\"\n                    type={radioType}\n                    name={id}\n                    value={opt.value}\n                    onChange={this.handleChange}\n                    checked={checked()}\n            />\n                <label\n                    className=\"form-check-label\"\n                    htmlFor={\"input-\" + (id+i).toString()}>\n                    {opt.text}\n                </label>\n            </div>\n        )\n    }\n\n    getCascade (opts, lv, unique) {\n        if (Array.isArray(opts.levels.level)){\n            let l = opts.levels.level.length - 1\n            return opts.levels.level.map((opt, i) => {\n                this.limitCascade = i + 1\n                return this.renderCascade(opt, i, l, unique)\n            });\n        }\n        this.limitCascade = 1;\n        return this.renderCascade(opts.levels.level, 0, 0, unique);\n    }\n\n    renderCascade (opt, i, l, unique) {\n        let cascades = []\n        let choose_options = \"cascade_\" + i\n        let dropdown = this.state[this.state[choose_options]]\n        let cascade = (\n            <div key={unique + '-dropdown-' + i}>\n            <div>{opt.text}</div>\n            <select\n                className=\"form-control\"\n                value={ this.state.selected } type=\"select\"\n                name={ this.props.data.id.toString() + '-' + i}\n                onChange={this.handleChange}\n            >\n                <option key={unique + '-cascade-options-' + 0} value={this.state.value}>Please Select</option>\n                {this.renderCascadeOption(dropdown,(i+1),opt.text, unique)}\n            </select>\n            </div>\n        );\n        cascades.push(cascade)\n        if (this.limitCascade <= i) {\n            this.handleChange()\n        }\n        return cascades.map((x, i) => x)\n    }\n\n    renderCascadeOption (data,targetLevel, unique) {\n        if(data) {\n            return data.map((x, i) => {\n                let options = (\n                    <option\n                        key={unique + '-cascade-options-' + i}\n                        value={x.id}\n                    >\n                        {x.name}\n                    </option>\n                )\n                return options\n            })\n        }\n    }\n\n    getCascadeDropdown(lv, ix) {\n        if (this.props.data.type === \"cascade\") {\n            let url = API_ORIGIN + 'cascade/' + this.instanceUrl + '/' + this.props.data.cascadeResource + '/' + lv\n            console.log(url);\n            let options = \"options_\" + lv\n            let cascade = \"cascade_\" + ix\n            let availcasc = this.props.value.cascade;\n            let isavailable = false;\n            let res;\n            if (availcasc.length > 0) {\n                isavailable = true;\n            }\n            if (isavailable) {\n                res = availcasc.filter(x => {\n                    return x.url === url;\n                })[0];\n            }\n            if (res) {\n                try {\n                    this.setState({\n                        [options]: res.data,\n                        [cascade]: [options],\n                        value: res.data[ix]['id']\n                    })\n                } catch (err) {\n                    localStorage.removeItem(this.props.data.id)\n                }\n            }\n            if (!res) {\n                this.fetchCascade(lv, ix, url, options, cascade);\n                console.log('NEW CASCADE');\n            }\n        }\n    }\n\n    fetchCascade(lv, ix, url, options, cascade) {\n        axios.get(url).then((res) =>{\n            try {\n                this.setState({\n                    [options]: res.data,\n                    [cascade]: [options],\n                    value: res.data[ix]['id']\n                })\n            } catch (err) {\n                localStorage.removeItem(this.props.data.id)\n            }\n            return res\n        }).then((res) => {\n            this.props.storeCascade({\n                url:url,\n                data:res.data\n            })\n        })\n    }\n\n    getInput(data, unique, validation, answered, type) {\n        return (\n            <input\n                className={data.type === \"photo\" ? \"form-control-file\" : \"form-control\"}\n                value={answered ? answered : \"\"}\n                min={validation.minVal ? validation.minVal : \"\"}\n                max={validation.maxVal ? validation.maxVal: \"\"}\n                key={unique}\n                type={type}\n                name={'Q-' + data.id.toString()}\n                onChange={this.handleChange}\n            />\n        )\n    }\n\n    getInputOther(data, unique, answered, type) {\n        return (\n            <input\n                className={data.type === \"photo\" ? \"form-control-file\" : \"form-control\"}\n                value={answered ? answered : \"\"}\n                key={unique}\n                type={type}\n                name={'Q-' + data.id.toString()}\n                onChange={this.handleChange}\n            />\n        )\n    }\n\n    getPhoto(data, unique, answered, type) {\n        return (\n            <FilePond\n                server={(\n                    {\n                        url: API_ORIGIN,\n                        process: {\n                            url: 'upload-image',\n                            method: 'POST',\n                            onload: (response) => {\n                                this.handlePhoto(response)\n                                return response.key\n                            },\n                            onerror: (response) => {\n                                return response.data\n                            },\n                            ondata: (formData) => {\n                                formData.append('Status', 'Uploaded');\n                                return formData;\n                            }\n                        },\n                        patch: {\n                            url: '.upload-image',\n                            method: 'GET',\n                            onload: (response) => {\n                                this.handlePhoto(response)\n                                return response.key\n                            },\n                            onerror: (response) => {\n                                return response.data\n                            }\n                        },\n                        revert: {\n                            url: '.delete-image/' + localStorage.getItem(data.id),\n                            method: 'GET',\n                            onload: (response) => {\n                                localStorage.removeItem(data.id)\n                            }\n                        }\n                    }\n                )}\n                key={unique}\n                allowMultiple={false}\n                name={'Q-' + data.id.toString()}\n                data-max-file-size=\"500kb\"\n            />\n        )\n    }\n\n    getTextArea(data, unique, answered, type) {\n        return (\n            <textarea\n                key={unique}\n                rows=\"3\"\n                className=\"form-control\"\n                value={answered ? answered : \"\"}\n                type={type}\n                onChange={this.handleChange}\n                name={'Q-' + data.id.toString()}\n            />\n        )\n    }\n\n    componentDidMount () {\n        if (this.props.data.type === \"cascade\"){\n            localStorage.removeItem(this.props.data.id)\n            this.getCascadeDropdown(0, 0)\n        }\n        if (localStorage.getItem(this.props.data.id) !== null){\n            this.props.checkSubmission();\n        };\n    }\n\n    render() {\n        let data = this.props.data\n        let key = 'question-form-' + data.id.toString()\n        let formtype = data.type\n        let answered = localStorage.getItem(data.id)\n        if (data.localeNameFlag) {\n            this.setDpStorage()\n        }\n        switch(formtype) {\n            case \"option\":\n                return this.getRadio(data, key)\n            case \"cascade\":\n                return this.getCascade(data,0, key)\n            case \"number\":\n                return this.getInput(data, key, data.validationRule, answered, formtype)\n            case \"photo\":\n                return this.getPhoto(data, key, answered, \"file\")\n            case \"date\":\n                return this.getInputOther(data, key, answered, formtype)\n            default:\n                return this.getTextArea(data, key, answered, formtype)\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionType);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { mapStateToProps } from '../reducers/actions.js'\nimport QuestionType from './QuestionType.js'\nimport { Mandatory } from '../util/Badges'\nimport {\n    Card,\n    CardBody,\n    CardTitle\n} from 'reactstrap'\nimport '../App.css'\n\nclass Questions extends Component {\n\n    constructor(props) {\n        super(props);\n        this.getForms = this.getForms.bind(this);\n        this.isJsonString = this.isJsonString.bind(this);\n        this.renderMandatoryIcon = this.renderMandatoryIcon.bind(this);\n        this.renderQuestion = this.renderQuestion.bind(this);\n    }\n\n    isJsonString(str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    renderQuestion(qid, question) {\n        return(\n           <QuestionType key={'question-type-' + qid} data={question} />\n        )\n    }\n\n    renderMandatoryIcon(qid) {\n        let answered = false;\n        if (localStorage.getItem(qid)){\n            answered = true;\n        }\n        return (Mandatory(answered));\n    }\n\n    getForms(questions){\n        return questions.map((question) => {\n            let qid = question.id.toString()\n            return (\n                <Card key={\"card-\" + qid} className= {question.show === false ? 'd-none' : ''} >\n                <CardBody key={\"card-body-\" + qid} id={\"card-body-\" + qid}>\n                    <CardTitle key={\"card-title-\" + qid}>\n                        { (question.order.toString()) + '. ' + question.text }\n                        { question.mandatory ? this.renderMandatoryIcon(qid) : ''}\n                    </CardTitle>\n                    {this.renderQuestion(qid, question)}\n                </CardBody>\n                </Card>\n            )}\n        )\n    }\n\n    render() {\n        return this.getForms(this.props.value.questions);\n    }\n}\n\nexport default connect(mapStateToProps)(Questions);\n","import React from 'react'\nimport {\n    FaExclamationTriangle,\n    FaCheckCircle,\n} from 'react-icons/fa'\n\nexport const Mandatory = (answered) => {\n    if (answered) {\n        return (\n            <FaCheckCircle\n                color=\"green\"\n                className=\"float-right\"\n            />\n        )\n    } else {\n        return (\n            <FaExclamationTriangle\n                color=\"red\"\n                className=\"float-right\"\n            />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\n\nclass Pagination extends Component {\n    constructor(props) {\n        super(props);\n        this.showGroup = this.showGroup.bind(this);\n    }\n\n    showGroup(group) {\n        return this.props.changeGroup(group)\n    }\n\n    render() {\n        const prev_class = this.props.value.groups.active <= 1 ? \"btn-secondary\" : \"btn-primary\"\n        const next_class = this.props.value.groups.active === this.props.value.groups.list.length ? \"btn-secondary\" : \"btn-primary\"\n        const prev_target = this.props.value.groups.active - 1;\n        const next_target = this.props.value.groups.active + 1;\n        return (\n            <div className=\"btn btn-group ml-auto mt-2 mt-lg-0\">\n                <button className={\"btn \" + prev_class}\n                onClick={() => {this.showGroup(prev_target)}}\n                >\n                    Prev\n                </button>\n                <button className={\"btn \" + next_class}\n                onClick={() => {this.showGroup(next_target)}}\n                >\n                    Next\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n","import React, { Component } from 'react'\nimport {connect } from 'react-redux';\nimport { mapStateToProps } from '../reducers/actions.js'\nimport { Toast, ToastHeader, ToastBody } from 'reactstrap'\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className='sidebar-heading'>\n                <div className=\"my-2\">\n                <Toast>\n                  <ToastHeader>\n                      <img alt=\"img-logo\" src=\"https://www.2scale.org/assets/default/img/logo_2scale_red.gif\" className='responsive-image'/>\n                    {this.props.value.surveyName}\n                  </ToastHeader>\n                  <ToastBody>\n                    Survey ID: {this.props.value.surveyId}\n                    <br/>\n                    Version: {this.props.value.version}\n                  </ToastBody>\n                </Toast>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\nimport swal from '@sweetalert/with-react'\nimport ReCAPTCHA from \"react-google-recaptcha\"\nimport axios from 'axios'\nimport { Spinner } from 'reactstrap'\nimport '../App.css'\nimport { PROD_URL } from '../util/Environment'\n\nconst API_ORIGIN = (PROD_URL ? ( window.location.origin + window.location.pathname.split('/')[1] + \"-api/\" ) : process.env.REACT_APP_API_URL);\nconst SITE_KEY = \"6Lejm74UAAAAAA6HkQwn6rkZ7mxGwIjOx_vgNzWC\"\n\nclass Submit extends Component {\n\n    constructor(props) {\n        super(props);\n        this.showCaptcha = this.showCaptcha.bind(this)\n        this.showPassword = this.showPassword.bind(this)\n        this.submitForm = this.submitForm.bind(this)\n        this.handleCaptcha = this.handleCaptcha.bind(this)\n        this.handlePassword = this.handlePassword.bind(this)\n        this.handleUser = this.handleUser.bind(this)\n        this.showSpinner = this.showSpinner.bind(this)\n        this.state = {\n            _showCaptcha : this.props.value.captcha,\n            _showSpinner : false\n        }\n\t\tthis._reCaptchaRef = React.createRef();\n    }\n\n    handlePassword (event) {\n        console.log(event.target.value)\n        localStorage.setItem(\"_password\",event.target.value)\n    }\n\n    handleUser (event) {\n        console.log(event.target.value)\n        localStorage.setItem(\"_username\",event.target.value)\n    }\n\n\thandleCaptcha = value => {\n\t\tthis.setState({captcha: value});\n        this.props.submitState(true);\n\t\tif (this.state.captcha === null) this.setState({ expired: true });\n\t};\n\n    asyncScriptOnLoad = () => {\n        this.setState({ callback: \"called!\" });\n    };\n\n    showCaptcha = () => {\n        return (\n            <ReCAPTCHA\n                style={{\n                    'display': 'block',\n                    'overflow': 'hidden',\n                    'borderBottom': '1px solid #ddd',\n                    'padding': '8px',\n                }}\n                size=\"normal\"\n                theme=\"light\"\n                ref={this._reCaptchaRef}\n                sitekey={SITE_KEY}\n                onChange={this.handleCaptcha}\n                asyncScriptOnLoad={this.asyncScriptOnLoad}\n            />\n        )\n    }\n\n    showPassword = () => {\n        return (\n            <Fragment>\n                <label\n                    className=\"form-password-label\"\n                    htmlFor={\"submit-username\"}>\n                    Username:\n                </label>\n                <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    name=\"submit-username\"\n                    onChange={this.handleUser}\n                />\n                <label\n                    className=\"form-password-label\"\n                    htmlFor={\"submit-password\"}>\n                    Password:\n                </label>\n                <input\n                    className=\"form-control\"\n                    type=\"password\"\n                    name=\"submit-password\"\n                    onChange={this.handlePassword}\n                />\n                <hr/>\n            </Fragment>\n        )\n    }\n\n    submitForm () {\n        localStorage.setItem(\"_submissionStop\", Date.now())\n        this.setState({'_showSpinner': true})\n        let content_length =  JSON.stringify(localStorage).length.toString()\n        let content = localStorage;\n        axios.post(API_ORIGIN+ 'submit-form',\n                content, { headers: {\n                'Content-Length': content_length,\n                'Content-Type': 'application/json'\n                    }\n                }\n            )\n            .then(res => {\n                swal({\n                    icon: \"success\",\n                    title: \"Success!\",\n                    text: \"New datapoint is sent! clearing form...\",\n                    closeOnClickOutside: false,\n                    closeOnEsc: false,\n                    button: false,\n                    timer: 3200\n                })\n                this.setState({'_showSpinner': false})\n                setTimeout(function(){\n                     localStorage.clear()\n                     setTimeout(function(){\n                        window.location.reload();\n                     }, 3000);\n                }, 500);\n                return res;\n            }).catch((res, error) => {\n                console.log(res, error)\n                this.setState({'_showSpinner': false})\n                swal(\"Oops!\", \"Something went wrong!\", \"error\")\n            })\n    }\n\n    showSpinner = value => {\n        return (\n            <Spinner size=\"sm\" color=\"light\" />\n        )\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.props.value.captcha ? this.showCaptcha() : false}\n                <div className=\"submit-block\">\n                    {this.props.value.submit? this.showPassword() : false}\n                    <button\n                        onClick={this.submitForm}\n                        className={\"btn btn-block btn-\" + ( this.props.value.submit ? \"primary\" : \"secondary\")\n                        }\n                        disabled={this.props.value.submit ? false : true}\n                    >\n                    { this.state._showSpinner ? <Spinner size=\"sm\" color=\"light\" /> : \"\" }\n                    <span>Submit</span>\n                    </button>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Submit);\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from './reducers/actions.js'\nimport swal from '@sweetalert/with-react'\nimport './App.css'\nimport 'filepond/dist/filepond.min.css';\nimport GroupButtons from './component/GroupButtons'\nimport GroupHeaders from './component/GroupHeaders'\nimport DataPoint from './component/DataPoint'\nimport Questions from './component/Questions'\nimport Pagination from './component/Pagination'\nimport Header from './component/Header'\nimport Submit from './component/Submit'\nimport {\n    FaArrowLeft,\n    FaArrowRight\n} from 'react-icons/fa'\nimport { PROD_URL } from './util/Environment.js'\n\nconst API_URL = (PROD_URL ? window.location.href.replace(\"flow-web\",\"flow-web-api\") : process.env.REACT_APP_API_URL)\nconst CACHE_URL = (PROD_URL ? \"update\" : \"fetch\")\nconst DELAY = 10000000;\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.instance = this.props.match.params.instance;\n        this.surveyId = this.props.match.params.surveyid;\n        this.setFullscreen = this.setFullscreen.bind(this);\n        this.renderQuestions = this.renderQuestions.bind(this);\n        this.renderGroups = this.renderGroups.bind(this);\n        this.state = {\n            _fullScreen: false,\n            _rendered: false\n        }\n    }\n\n    updateData = (data) => {\n        this.props.loadQuestions(data)\n        this.props.restoreAnswers(this.props.value.questions)\n        if (localStorage.getItem(\"_dataPointName\")){\n            this.props.reduceDataPoint(localStorage.getItem('_dataPointName'))\n        }\n        this.props.changeGroup(1)\n        localStorage.setItem(\"_version\", data.version)\n        localStorage.setItem(\"_instanceId\", data.app)\n        let questionId = []\n        let answerType = []\n        let questionGroupArray = Array.isArray(data.questionGroup)\n        if (!questionGroupArray) {\n            data.questionGroup = [data.questionGroup];\n        }\n        data.questionGroup.forEach((g) => {\n            g.question.forEach((q, i) => {\n                questionId.push(q.id)\n                answerType.push(q.type.toUpperCase())\n            })\n        })\n        localStorage.setItem(\"questionId\", questionId)\n        localStorage.setItem(\"answerType\", answerType)\n        this.setState({\n            ...data,\n        })\n        let dataPointId = [\n            Math.random().toString(36).slice(2).substring(1, 5),\n            Math.random().toString(36).slice(2).substring(1, 5),\n            Math.random().toString(36).slice(2).substring(1, 5)\n        ]\n        localStorage.setItem(\"_dataPointId\", dataPointId.join(\"-\"))\n        localStorage.setItem(\"_submissionStart\", Date.now())\n        localStorage.setItem(\"_deviceId\", \"Akvo Flow Web\")\n    }\n\n    updateQuestions = (index) => {\n        this.setState({\n            questionIndex: index\n        })\n    }\n\n    setFullscreen() {\n        const currentState = this.state._fullscreen\n        this.setState({\n            _fullscreen: !currentState\n        })\n    }\n\n    componentDidMount() {\n        this.props.generateUUID({})\n        this.props.changeSettings({_isLoading:true})\n        if (localStorage.getItem(\"_formId\")) {\n            if (localStorage.getItem(\"_formId\") !== this.surveyId){\n                localStorage.clear();\n            }\n        }\n        localStorage.setItem(\"_formId\", this.surveyId)\n        localStorage.setItem(\"_instanceId\", this.instance)\n        axios.get(API_URL + '/' + CACHE_URL)\n            .then(res => {\n                this.updateData(res.data)\n                this.setState({ _rendered:true });\n            })\n            .catch(error => {\n                console.log(error)\n                swal(\"Oops!\", \"Something went wrong!\", \"error\")\n                console.log(this.state)\n            })\n\t\tsetTimeout(() => {\n                  this.setState({ load: true });\n        }, DELAY);\n    }\n\n    renderQuestions() {\n        return (\n            <Questions />\n        )\n    }\n\n    renderGroups() {\n        return (\n            <GroupButtons />\n        )\n    }\n\n    render() {\n        return (\n            <div className={this.state._fullscreen ? \"wrapper d-flex toggled\": \"wrapper d-flex\"}>\n                <div className=\"sidebar-wrapper bg-light border-right\">\n                    <Header/>\n                    {this.state._rendered ? this.renderGroups() : \"\"}\n                    {( this.props.value.questions.length === 1 ? \"\" : (<Submit />) )}\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\n                        <button className=\"btn btn-primary\" onClick={this.setFullscreen}>\n                            {this.state._fullscreen ? <FaArrowRight /> : <FaArrowLeft />}\n                        </button>\n                        {( this.props.value.questions.length === 1 ? \"\" : (<DataPoint />) )}\n                        <Pagination />\n                    </nav>\n                    <div className=\"container-fluid fixed-container\" key={'div-group-'+this.state.surveyId}>\n                        <GroupHeaders />\n                        {this.state._rendered ? this.renderQuestions() : \"\"}\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n//<Questions />\n//<Pagination />\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { getQuestionType } from '../util/QuestionHandler.js'\nimport { isJsonString } from '../util/QuestionHandler.js'\nimport uuid from 'uuid/v4'\n\nconst initialState = {\n    surveyName:\"Loading..\",\n    surveyId:\"Loading..\",\n    version:\"Loading..\",\n    questions: [{\n        group: 1,\n        heading: null,\n        id: 1,\n        localeNameFlag: false,\n        mandatory: false ,\n        order: 1,\n        show: false,\n        text: \"Loading\",\n        type: \"text\",\n        validation: false,\n    }],\n    active: [],\n    answers: [],\n    mandatory: [],\n    submit: false,\n    captcha: false,\n    datapoint: null,\n    datapoints: [],\n    uuid: \"LOADING\",\n    groups: {\n        list: [{\n            index:1,\n            heading:\"Loading Questions\"\n        }],\n        active: 1,\n    },\n    pages:{\n    },\n    cascade:[]\n}\n\nconst validateGroup = (data) => {\n    if (Array.isArray(data)) {\n        return data;\n    }\n\tlet groups = [];\n\tif ( typeof data === \"object\" ) {\n\t\tgroups.push({\n\t\t\tindex:0,\n\t\t\theading:data.heading,\n\t\t\tquestion:data.question\n\t\t});\n\t}\n\treturn groups;\n}\n\nconst addQuestions = (data) => {\n    const relable = (q,g) => {\n        return {\n            ...q,\n            id: parseInt(q.id),\n            order: parseInt(q.order),\n            type: getQuestionType(q),\n            group: (g.index + 1),\n            heading: g.heading,\n            validation: (q.validationRule ? q.validationRule : false),\n            show: false\n        }\n    }\n    const mapgroup = (q, g) => {\n        return q.map(q => relable(q,g))\n    }\n\n\tconst groups = validateGroup(data.questionGroup);\n\n\tlet questionGroup = groups.map((g,i) => {\n\t\treturn {\n\t\t\t...g,\n\t\t\tquestion: mapgroup(g.question, {heading:g.heading, index: i})\n\t\t}\n\t}).map(g => g.question)\n\n    return [].concat(...questionGroup);\n}\n\nconst listDatapoints = (data) => {\n\n\tconst groups = validateGroup(data.questionGroup);\n    return addQuestions(groups).filter(x => x.localeNameFlag).map(q => q.id)\n}\n\nconst listGroups = (data) => {\n\n\tconst groups = validateGroup(data.questionGroup);\n    const group = groups.map((x,i) => {return { index: (i + 1), heading: x.heading}});\n    return {\n        list: group,\n        active: 1\n    }\n}\n\nconst listMandatory = (data) => {\n    return addQuestions(data).filter(x => x.mandatory).map(x => x.id);\n}\n\nconst showHideQuestions = (orig, group) => {\n    let updated_answer = []\n    let active = orig.map(x => {\n        let show = true\n        let dependent = false\n        if(x.dependency) {\n            dependent = x.dependency\n            show = false\n        }\n        if(dependent){\n            let answer_value;\n            if (dependent[\"answer-value\"].includes(\"|\") > -1) {\n                answer_value = dependent[\"answer-value\"].split(\"|\")\n                answer_value = answer_value.map(b => {\n                    if (!isNaN(b)){\n                        b = parseInt(b);\n                    }\n                    return b;\n                })\n            }\n            if (localStorage.getItem(dependent.question) !== null) {\n                let answer = localStorage.getItem(dependent.question)\n                if (isJsonString(answer_value)) {\n                    answer = JSON.parse(answer_value)\n                }\n                if (!isNaN(answer_value)) {\n                    answer = answer.toString()\n                }\n                if (answer_value.includes(answer)){\n                    show = true\n                }\n                if (answer === answer_value) {\n                    show = true\n                }\n            }\n            if (localStorage.getItem(parseInt(dependent.question)) === null) {\n                show = false\n                localStorage.removeItem(x.id)\n            }\n        }\n        if (group) {\n            if(x.group !== group){\n                show = false\n            }\n        }\n        if (!group && !show) {\n            localStorage.removeItem(x.id)\n            if (dependent) {\n                let current_state = updated_answer.find(u => {\n                    return parseInt(u.id) === parseInt(dependent.question)\n                });\n                if (current_state.show === false) {\n                    show = false\n                }\n            }\n        }\n        updated_answer.push({...x, show:show, type: getQuestionType(x)})\n        return { ...x, show:show, type: getQuestionType(x)}\n    })\n    return active;\n}\n\nconst reduceDataPoint = (state) => {\n    return state\n}\n\nconst replaceAnswers = (questions, data, restore) => {\n    const question = questions.map(x => {\n        let answer = null\n        let stored = false\n        if (restore) {\n            stored = data.getItem(x.id);\n            answer = (stored ? stored : null)\n            try {\n                answer = JSON.parse(answer)\n            } catch (err) { }\n            answer = (parseInt(answer).isNan ? parseInt(answer) : answer)\n        }\n        return {\n            id: x.id,\n            answer: answer,\n            mandatory: x.mandatory\n        }\n    });\n    return question;\n}\n\nconst generateUUID = () => {\n    let id = uuid()\n    id = id.split('-')\n    id = id.map(x => {\n        return x.substring(0, 4);\n    }).slice(0,3);\n    return id.join('-');\n}\n\nconst checkSubmission = (answers, questions) => {\n    let activelist = showHideQuestions(questions, false).filter(x => x.show);\n    answers = answers.filter(x => x.mandatory).filter(x => x.answer !== null);\n    let active_mandatory = activelist.map(x => {\n        let answered = answers.filter(y => y.id === x.id).map(y => y.answer);\n        answered = (answered.length < 1 ? false : true)\n        return {\n            ...x,\n            answered: answered\n        }\n    }).filter(x => x.mandatory);\n    let answered_mandatory = active_mandatory.filter(x => x.answered)\n    let captcha = (answered_mandatory.length >= active_mandatory.length)\n    return captcha\n}\n\nconst setupPages = (current, data) => {\n    return {\n        ...current,\n        data\n    }\n}\n\nconst storeCascade = (current, cascade) => {\n    if (current.length < 1) {\n        return [cascade];\n    }\n    return [...current, cascade];\n}\n\nexport const questionReducers = (state = initialState, action) => {\n    switch(action.type){\n        case 'LOAD QUESTIONS':\n            return {\n                ...state,\n                surveyName: action.data.name,\n                surveyId: action.data.surveyId,\n                version: action.data.version,\n                questions: addQuestions(action.data),\n                datapoints: listDatapoints(action.data),\n                groups: listGroups(action.data),\n                mandatory: listMandatory(action.data)\n            }\n        case 'RESTORE ANSWERS':\n            return {\n                ...state,\n                answers: replaceAnswers(action.data, localStorage, true)\n            }\n        case 'REDUCE ANSWER':\n            return {\n                ...state,\n                answers: replaceAnswers(state.answers, action.answer, false),\n            }\n        case 'REDUCE DATAPOINT':\n            return {\n                ...state,\n                datapoint: reduceDataPoint(action.data)\n            }\n        case 'CHANGE GROUP':\n            return {\n                ...state,\n                questions: showHideQuestions(state.questions, action.group),\n                groups: {...state.groups, active: action.group}\n            }\n        case 'CHECK SUBMISSION':\n            return {\n                ...state,\n                captcha: checkSubmission(state.answers, state.questions),\n                submit: false\n            }\n        case 'SUBMIT STATE':\n            return {\n                ...state,\n                submit: action.data\n            }\n        case 'GENERATE UUID':\n            return {\n                ...state,\n                uuid: generateUUID(action.data)\n            }\n        case 'PAGES SETTINGS':\n            return {\n                ...state,\n                pages: setupPages(state.pages, action.data)\n            }\n        case 'STORE CASCADE':\n            return {\n                ...state,\n                cascade: storeCascade(state.cascade, action.data)\n            }\n        default:\n            return state;\n    }\n}\n\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from './Home'\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { questionReducers } from './reducers/questionReducers.js'\nimport { PROD_URL } from './util/Environment.js'\n\nconst BASE_URL = ( PROD_URL ? \"/akvo-flow-web\" : process.env.REACT_APP_BASE_URL);\n\nconst store = createStore(questionReducers)\n\nclass App extends Component {\n\n    render () {\n        return (\n\t        <Provider store={store}>\n            <BrowserRouter>\n                <Route path={ BASE_URL + \"/:instance/:surveyid\"} render={ props => <Home key=\"home\" {...props} />} />\n            </BrowserRouter>\n\t        </Provider>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nrequire('dotenv').config()\n\nif (localStorage.getItem(\"questionId\")){\n    let qlcache = localStorage.getItem(\"questionId\").split(\",\");\n    let atcache = localStorage.getItem(\"answerType\").split(\",\");\n    let photocache = qlcache.map((x,i) => {\n        return {id: x, type: atcache[i]}\n    }).filter(x => x.type === \"PHOTO\");\n    if (photocache.length > 0) {\n        photocache.forEach(x => localStorage.removeItem(x.id))\n    };\n}\nReactDOM.render(<App /> , document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}