{"version":3,"sources":["reducers/actions.js","util/Loading.js","component/GroupButtons.js","component/GroupHeaders.js","component/DataPoint.js","util/QuestionHandler.js","component/QuestionType.js","component/Questions.js","util/Badges.js","component/Pagination.js","component/Header.js","component/Submit.js","Home.js","reducers/questionReducers.js","App.js","serviceWorker.js","index.js"],"names":["mapStateToProps","state","value","mapDispatchToProps","dispatch","loadQuestions","data","type","changeGroup","group","restoreAnswers","reduceAnswer","answer","reduceDataPoint","checkSubmission","submitState","generateUUID","changeSettings","pulseloader","css","_templateObject","Loading","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","color","react_default","a","createElement","className","styles","BeatLoader_default","sizeUnit","size","React","Component","connect","GroupButtons","getUrl","replace","toLowerCase","getLoading","util_Loading","showQuestion","bind","assertThisInitialized","getQuestionList","listClass","_showQuestion","groups","_this2","list","map","key","index","onClick","href","heading","active","questions","length","GroupHeaders","getHeader","filter","g","react","DataPoint","datapoint","uuid","getQuestionType","qtype","validationRule","validationType","options","isJsonString","str","JSON","parse","e","API_URL","pathurl","registerPlugin","FilePondPluginImagePreview","QuestionType","instanceUrl","window","location","pathname","split","localStorage","getItem","id","setDpStorage","getRadioSelected","getRadio","getPhoto","renderRadio","getCascadeDropdown","renderCascade","renderCascadeOption","limitCascade","handleChange","handlePhoto","handleCascadeChange","handleGlobal","questionid","qval","targetLevel","text","vals","storage","option","parseInt","current","x","stringify","concat","toConsumableArray","setItem","image","setState","event","target","ddindex","selectedIndex","name","allowMultiple","multipleValue","indexOf","push","splice","removeItem","localeNameFlag","names","b","c","isNaN","forEach","edited","join","includes","unique","opts","undefined","objectSpread","radioType","opt","i","checked","toString","onChange","htmlFor","lv","_this3","l","levels","level","cascades","choose_options","dropdown","cascade","Fragment","selected","ix","_this4","url","cascadeResource","axios","get","then","res","_this4$setState","defineProperty","err","validation","answered","min","minVal","max","maxVal","_this5","react_filepond","server","process","method","onload","response","onerror","ondata","formData","append","patch","revert","data-max-file-size","rows","formtype","getCascade","getInput","getInputOther","getTextArea","Questions","getForms","renderMandatoryIcon","qid","index_esm","Mandatory","question","Card","show","CardBody","CardTitle","order","mandatory","component_QuestionType","Pagination","val","onSelectGroup","_prevDisable","prev","_nextDisable","next","total","Header","Toast","ToastHeader","alt","src","surveyName","ToastBody","surveyId","version","SITE_KEY","Submit","handleCaptcha","captcha","expired","asyncScriptOnLoad","callback","showCaptcha","esm","style","display","overflow","borderBottom","padding","theme","ref","_reCaptchaRef","sitekey","showPassword","handlePassword","showSpinner","Spinner","submitForm","_showCaptcha","_showSpinner","createRef","console","log","Date","now","post","swal","catch","error","submit","disabled","Home","updateData","app","questionId","answerType","Array","isArray","questionGroup","q","toUpperCase","_nextGroup","_currentGroup","_prevGroup","_totalGroup","dataPointId","Math","random","slice","substring","updateQuestions","questionIndex","selectGroup","instance","match","params","surveyid","setFullscreen","_fullScreen","currentState","_fullscreen","_isLoading","setTimeout","load","component_Header","component_GroupButtons","component_Submit","component_DataPoint","component_Pagination","component_GroupHeaders","component_Questions","initialState","answers","datapoints","pages","addQuestions","_ref","mapgroup","relable","apply","listGroups","listMandatory","showHideQuestions","orig","updated_answer","dependent","dependency","answer_value","find","u","replaceAnswers","restore","isNan","activelist","active_mandatory","y","setupPages","store","createStore","arguments","action","App","es","react_router_dom","react_router","path","render","src_Home","assign","Boolean","hostname","require","config","qlcache","atcache","photocache","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e02cbcb.chunk.js","sourcesContent":["export const mapStateToProps = (state) => {\n    return {\n        value: state\n    }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        loadQuestions: (data) => dispatch({type:\"LOAD QUESTIONS\", data:data}),\n        changeGroup: (data) => dispatch({type:\"CHANGE GROUP\", group:data}),\n        restoreAnswers: (data) => dispatch({type:\"RESTORE ANSWERS\", data:data}),\n        reduceAnswer: (data) => dispatch({type:\"REDUCE ANSWER\", answer:data}),\n        reduceDataPoint: (data) => dispatch({type:\"REDUCE DATAPOINT\", data:data}),\n        checkSubmission: () => dispatch({type:\"CHECK SUBMISSION\"}),\n        submitState: (data) => dispatch({type:\"SUBMIT STATE\", data:data}),\n        generateUUID: (data) => dispatch({type:\"GENERATE UUID\", data:data}),\n        changeSettings: (data) => dispatch({type:\"PAGES SETTINGS\", data:data})\n    }\n}\n\n","import React from 'react'\nimport {\n    connect\n} from 'react-redux'\nimport {\n    mapStateToProps,\n    mapDispatchToProps\n} from '../reducers/actions.js'\nimport {\n    css\n} from '@emotion/core'\nimport BeatLoader from 'react-spinners/BeatLoader'\nimport '../style/style.css'\n\nconst pulseloader = css ` margin: 0 auto; border-color: red; `\n\nclass Loading extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            color: '#007bff'\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.styles}>\n                 <h3 className=\"mt-2\">\n                   Loading Forms\n                </h3>\n            <BeatLoader\n                css={ pulseloader }\n                sizeUnit={ \"px\" }\n                size = { 20 }\n                color = { this.state.color }\n            />\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\n","import { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\nimport React, { Component } from 'react'\nimport Loading from '../util/Loading'\n\nclass GroupButtons extends Component {\n\n    constructor(props) {\n        super(props);\n        this.showQuestion = this.showQuestion.bind(this)\n        this.getQuestionList = this.getQuestionList.bind(this)\n        this.listClass = \"list-group-item list-group-item-action \"\n        this.getUrl = this.getUrl.bind(this)\n        this.state = {\n          _showQuestion: ''\n        };\n    }\n\n    getUrl = ((group) => (\n        \"#\" + group.replace(/ /g,\"-\").toLowerCase()\n    ))\n\n    showQuestion(group) {\n        this.props.changeGroup(group)\n    }\n\n    componentDidMount() {\n    }\n\n    getQuestionList(groups){\n        return groups.list.map((group) => (\n                <div className=\"list-group list-group-flush\" key={'group-' + group.index}>\n                <a onClick={() => {this.showQuestion(group.index)}}\n                href={this.getUrl(group.heading)}\n                className={(group.index === groups.active ?\n                        this.listClass + \" bg-current\" : this.listClass + \" bg-light\"\n                )}\n                >\n                    { group.heading }\n                </a>\n                </div>\n        ))\n    }\n\n    getLoading = () => (<Loading styles={'sidebar-loading'}/>)\n\n    render() {\n        return (\n            this.props.value.questions.length === 1 ?\n            this.getLoading() : this.getQuestionList(this.props.value.groups)\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupButtons);\n","import { connect } from 'react-redux'\nimport { mapStateToProps } from '../reducers/actions.js'\nimport React, { Component, Fragment } from 'react'\nimport Loading from '../util/Loading'\n\nclass GroupHeaders extends Component {\n\n    constructor(props) {\n        super(props);\n        this.getHeader = this.getHeader.bind(this)\n        this.getLoading = this.getLoading.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    getHeader = (groups) => {\n        let active = groups.list.filter(g => g.index === groups.active)\n        return active.map((group) => (\n            <Fragment key={group.index}>\n            <h2 className=\"mt-2\" >{group.heading}</h2>\n            <p>{group.heading}</p>\n            </Fragment>\n        ))\n    }\n\n    getLoading = () => (<Loading styles={'header-loading'}/>)\n\n    render() {\n        return (\n            this.props.value.questions.length === 1 ?\n            this.getLoading() : this.getHeader(this.props.value.groups)\n        )\n    }\n\n}\n\nexport default connect(mapStateToProps)(GroupHeaders);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { mapStateToProps } from '../reducers/actions.js'\n\nclass DataPoint extends Component {\n\n    render() {\n        return (\n            <div className=\"data-point\">\n                <h3 className=\"data-point-name\">{this.props.value.datapoint}</h3>\n                <span className=\"text-center data-point-id\">{this.props.value.uuid}</span>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(DataPoint);\n","export const getQuestionType = (props) => {\n    let qtype = props.type\n    if (props.validationRule) {\n        qtype = (props.validationRule.validationType === \"numeric\" ? \"number\" : \"text\")\n    }\n    if (props.options) {\n        qtype = \"option\"\n    }\n    switch (qtype) {\n        case \"signature\": break\n        case \"photo\": return \"photo\"\n        case \"number\": return \"number\"\n        case \"option\": return \"option\"\n        case \"cascade\": return \"cascade\"\n        case \"geo\": return \"text\"\n        case \"date\": return \"date\"\n        default:\n            return \"text\"\n    }\n    return qtype\n}\n\nexport const isJsonString = (str) => {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\nimport axios from 'axios';\nimport { isJsonString } from  '../util/QuestionHandler.js'\nimport { PROD_URL } from '../util/Environment'\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\n\nconst API_URL = (PROD_URL ? \"https://2scale.tc.akvo.org/akvo-flow-web-api/\" : \"http://localhost:5000/\")\nconst pathurl = (PROD_URL ? 2 : 1)\n\nregisterPlugin(FilePondPluginImagePreview);\n\nclass QuestionType extends Component {\n\n    constructor(props) {\n        super(props)\n        this.instanceUrl = window.location.pathname.split('/')[pathurl]\n        this.value = localStorage.getItem(this.props.data.id)\n        this.state = {\n            value: this.value ? this.value : '',\n        }\n        this.setDpStorage = this.setDpStorage.bind(this)\n        this.getRadioSelected = this.getRadio.bind(this)\n        this.getPhoto = this.getPhoto.bind(this)\n        this.renderRadio = this.renderRadio.bind(this)\n        this.getCascadeDropdown = this.getCascadeDropdown.bind(this)\n        this.renderCascade = this.renderCascade.bind(this)\n        this.renderCascadeOption = this.renderCascadeOption.bind(this)\n        this.limitCascade = 0\n        this.handleChange = this.handleChange.bind(this)\n        this.handlePhoto = this.handlePhoto.bind(this)\n        this.handleCascadeChange = this.handleCascadeChange.bind(this)\n        this.handleGlobal = this.handleGlobal.bind(this)\n    }\n\n    handleGlobal(questionid, qval){\n        if (qval === \"\" || qval === null){\n            this.props.restoreAnswers(this.props.value.questions)\n        } else {\n            this.props.restoreAnswers(this.props.value.questions)\n        }\n        this.props.changeGroup(this.props.value.groups.active)\n        this.props.checkSubmission()\n    }\n\n    handleCascadeChange(targetLevel, text, id, value) {\n        let vals;\n        let storage = {id:targetLevel,text:text, option:parseInt(value)}\n        if (localStorage.getItem(id)) {\n            let multipleValue = JSON.parse(localStorage.getItem(id))\n            let current = multipleValue.filter(x => x.id < targetLevel);\n            vals = JSON.stringify([...current, storage])\n        } else {\n            vals = JSON.stringify([storage])\n        }\n        if (targetLevel !== 0){\n            localStorage.setItem(this.props.data.id, vals)\n            this.handleGlobal(this.props.data.id, vals)\n        }\n        return true\n    }\n\n    handlePhoto(image) {\n        let id = this.props.data.id\n        localStorage.setItem(id, image)\n        this.setState({value: image})\n        this.handleGlobal(id, image)\n    }\n\n    handleChange(event) {\n        let id = this.props.data.id\n        let value = event.target.value\n        if (this.props.data.type === \"cascade\") {\n            let ddindex = event.target.selectedIndex\n            let text = event.target[ddindex].text\n            let targetLevel = parseInt(event.target.name.split('-')[1]) + 1\n            this.handleCascadeChange(targetLevel, text, id, value)\n            if (this.limitCascade > targetLevel) {\n                this.getCascadeDropdown(value, targetLevel)\n            }\n        }\n        else if (this.props.data.options && this.props.data.options.allowMultiple)  {\n            let multipleValue = []\n            if (localStorage.getItem(id)) {\n                multipleValue = JSON.parse(localStorage.getItem(id))\n            }\n            if (multipleValue.indexOf(value) === -1) {\n                multipleValue.push(value)\n            } else {\n\t\t\t\tmultipleValue.splice(multipleValue.indexOf(value), 1)\n            }\n\t\t\tif (multipleValue.length > 0) {\n            \tlocalStorage.setItem(id, JSON.stringify(multipleValue))\n                // this.props.answerReducer([{[id]:value}])\n            \tthis.setState({value: multipleValue})\n                this.handleGlobal(id, value)\n\t\t\t} else {\n\t\t\t\tlocalStorage.removeItem(id)\n            \tthis.setState({value: \"\"})\n\t\t\t}\n        } else {\n            localStorage.setItem(id, value)\n            this.setState({value: value})\n            this.handleGlobal(id, value)\n        }\n        if(value === \"\") {\n            this.setState({value: value})\n            localStorage.removeItem(id)\n            this.handleGlobal(id, value)\n        }\n        if (this.props.data.localeNameFlag) {\n            let a = JSON.parse(localStorage.getItem('_dpOrder'));\n            let names = []\n            a.map((b) => {\n                let c = localStorage.getItem(b)\n                if (c) {\n                    if (isJsonString(c) && isNaN(c)) {\n                        let cascade = JSON.parse(c).map(x => x.text)\n                        cascade.forEach(name => {\n                            names.push(name)\n                        });\n                    } else {\n                        names.push(c)\n                    }\n                }\n                return true\n            })\n            let edited = names.join(\" - \")\n            localStorage.setItem(\"_dataPointName\", edited)\n            this.props.reduceDataPoint(localStorage.getItem('_dataPointName'))\n        }\n    }\n\n    setDpStorage () {\n        if (localStorage.getItem('_dpOrder')) {\n            let a = JSON.parse(localStorage.getItem('_dpOrder'));\n            if (!a.includes(this.props.data.id)) {\n                a.push(this.props.data.id)\n            }\n            localStorage.setItem('_dpOrder', JSON.stringify(a));\n        } else {\n            localStorage.setItem('_dpOrder', JSON.stringify([this.props.data.id]));\n        }\n\n    }\n\n    getRadio (data, unique) {\n        let opts = data.options\n        if (opts.allowMultiple === undefined) {\n            opts = {...opts, allowMultiple: false}\n        }\n        let radioType = (opts.allowMultiple ? \"checkbox\" : \"radio\")\n        return (\n            opts.option.length > 1 ? (opts.option.map((opt, i) => this.renderRadio(\n                opt, i, data.id, radioType, unique)\n            )) : (this.renderRadio(opts.option, 0, data.id, radioType, unique))\n        )\n    }\n\n    getRadioSelected (value,id) {\n        if (localStorage.getItem(id)) {\n            if (localStorage.getItem(id) === value) {\n            return true\n            }\n            return false\n        }\n        return false\n    }\n\n    renderRadio (opt, i, id, radioType, unique) {\n        let checked = () => (localStorage.getItem(id) === opt.value)\n\t\tif (radioType === \"checkbox\" && this.state.value.indexOf(opt.value) >= 0) {\n\t\t\tchecked = () => (true)\n\t\t}\n        return (\n            <div className=\"form-check\"\n                 key={unique + '-div-radio-' + i.toString()}\n            >\n                <input\n                    key={unique + '-radio-' + i.toString()}\n                    className=\"form-check-input\"\n                    type={radioType}\n                    name={id}\n                    value={opt.value}\n                    onChange={this.handleChange}\n                    checked={checked()}\n            />\n                <label\n                    className=\"form-check-label\"\n                    htmlFor={\"input-\" + (id+i).toString()}>\n                    {opt.text}\n                </label>\n            </div>\n        )\n    }\n\n    getCascade (opts, lv, unique) {\n        let l = opts.levels.level.length - 1\n        return opts.levels.level.map((opt, i) => {\n            this.limitCascade = i + 1\n            return this.renderCascade(opt, i, l, unique)\n        })\n    }\n\n    renderCascade (opt, i, l, unique) {\n        let cascades = []\n        let choose_options = \"cascade_\" + i\n        let dropdown = this.state[this.state[choose_options]]\n        let cascade = (\n            <>\n            <div>{opt.text}</div>\n            <select\n                className=\"form-control\"\n                value={ this.state.selected } type=\"select\"\n                name={ this.props.data.id.toString() + '-' + i}\n                onChange={this.handleChange}\n            >\n                <option key={unique + '-cascade-options-' + 0} value=\"0\" selected>Please Select</option>\n                {this.renderCascadeOption(dropdown,(i+1),opt.text, unique)}\n            </select>\n            </>\n        )\n        cascades.push(cascade)\n        if (this.limitCascade <= i) {\n            this.handleChange()\n        }\n        return cascades.map((x, i) => x)\n    }\n\n    renderCascadeOption (data,targetLevel, unique) {\n        if(data) {\n            return data.map((x, i) => {\n                let options = (\n                    <option\n                        key={unique + '-cascade-options-' + i}\n                        value={x.id}\n                    >\n                        {x.name}\n                    </option>\n                )\n                return options\n            })\n        }\n    }\n\n    getCascadeDropdown(lv, ix) {\n        if (this.props.data.type === \"cascade\") {\n            let url = this.instanceUrl\n            url = API_URL + 'cascade/' + url + '/' + this.props.data.cascadeResource + '/' + lv\n            let options = \"options_\" + lv\n            let cascade = \"cascade_\" + ix\n            axios.get(url).then((res) =>{\n                try {\n                    this.setState({\n                        [options]: res.data,\n                        [cascade]: [options],\n                        value: res.data[ix]['id']\n                    })\n                } catch (err) {\n                    localStorage.removeItem(this.props.data.id)\n                }\n                return res\n            }).then((res) => {\n                let levels = this.props.data.levels.level.length\n                if (lv < levels) {\n                    if (localStorage.getItem(this.props.data.id) === null){\n                        this.handleCascadeChange(ix, res.data[ix]['name'], this.props.data.id, res.data[ix]['id'])\n                    }\n                }\n            })\n        }\n    }\n\n    getInput(data, unique, validation, answered, type) {\n        return (\n            <input\n                className={data.type === \"photo\" ? \"form-control-file\" : \"form-control\"}\n                value={answered ? answered : \"\"}\n                min={validation.minVal ? validation.minVal : \"\"}\n                max={validation.maxVal ? validation.maxVal: \"\"}\n                key={unique}\n                type={type}\n                name={'Q-' + data.id.toString()}\n                onChange={this.handleChange}\n            />\n        )\n    }\n\n    getInputOther(data, unique, answered, type) {\n        return (\n            <input\n                className={data.type === \"photo\" ? \"form-control-file\" : \"form-control\"}\n                value={answered ? answered : \"\"}\n                key={unique}\n                type={type}\n                name={'Q-' + data.id.toString()}\n                onChange={this.handleChange}\n            />\n        )\n    }\n\n    getPhoto(data, unique, answered, type) {\n        return (\n            <FilePond\n                server={(\n                    {\n                        url: API_URL,\n                        process: {\n                            url: './upload-image',\n                            method: 'POST',\n                            onload: (response) => {\n                                this.handlePhoto(response)\n                                return response.key\n                            },\n                            onerror: (response) => {\n                                return response.data\n                            },\n                            ondata: (formData) => {\n                                formData.append('Status', 'Uploaded');\n                                return formData;\n                            }\n                        },\n                        patch: {\n                            url: './upload-image',\n                            method: 'GET',\n                            onload: (response) => {\n                                this.handlePhoto(response)\n                                return response.key\n                            },\n                            onerror: (response) => {\n                                return response.data\n                            }\n                        },\n                        revert: {\n                            url: './delete-image/' + localStorage.getItem(data.id),\n                            method: 'GET',\n                            onload: (response) => {\n                                localStorage.removeItem(data.id)\n                            }\n                        }\n                    }\n                )}\n                key={unique}\n                allowMultiple={false}\n                name={'Q-' + data.id.toString()}\n                data-max-file-size=\"500kb\"\n            />\n        )\n    }\n\n    getTextArea(data, unique, answered, type) {\n        return (\n            <textarea\n                key={unique}\n                rows=\"3\"\n                className=\"form-control\"\n                value={answered ? answered : \"\"}\n                type={type}\n                onChange={this.handleChange}\n                name={'Q-' + data.id.toString()}\n            />\n        )\n    }\n\n    componentDidMount () {\n        if (this.props.data.type === \"cascade\"){\n            localStorage.removeItem(this.props.data.id)\n            this.getCascadeDropdown(0, 0)\n        }\n        this.props.checkSubmission()\n    }\n\n    render() {\n        let data = this.props.data\n        let key = 'question-form-' + data.id.toString()\n        let formtype = data.type\n        let answered = localStorage.getItem(data.id)\n        if (data.localeNameFlag) {\n            this.setDpStorage()\n        }\n        switch(formtype) {\n            case \"option\":\n                return this.getRadio(data, key)\n            case \"cascade\":\n                return this.getCascade(data,0, key)\n            case \"number\":\n                return this.getInput(data, key, data.validationRule, answered, formtype)\n            case \"photo\":\n                return this.getPhoto(data, key, answered, \"file\")\n            case \"date\":\n                return this.getInputOther(data, key, answered, formtype)\n            default:\n                return this.getTextArea(data, key, answered, formtype)\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionType);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { mapStateToProps } from '../reducers/actions.js'\nimport QuestionType from './QuestionType.js'\nimport { Mandatory } from '../util/Badges'\nimport {\n    Card,\n    CardBody,\n    CardTitle\n} from 'reactstrap'\nimport '../App.css'\n\nclass Questions extends Component {\n\n    constructor(props) {\n        super(props);\n        this.getForms = this.getForms.bind(this)\n        this.isJsonString = this.isJsonString.bind(this)\n        this.renderMandatoryIcon = this.renderMandatoryIcon.bind(this)\n    }\n\n    isJsonString(str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    renderMandatoryIcon(qid) {\n        let answered = false;\n        if (localStorage.getItem(qid)){\n            answered = true;\n        }\n        return (Mandatory(answered));\n    }\n\n    getForms(questions){\n        return questions.map((question) => {\n            let qid = question.id.toString()\n            return (\n                <Card key={\"card-\" + qid} className= {question.show === false ? 'd-none' : ''} >\n                <CardBody key={\"card-body-\" + qid} id={\"card-body-\" + qid}>\n                    <CardTitle key={\"card-title-\" + qid}>\n                        { (question.order.toString()) + '. ' + question.text }\n                        { question.mandatory ? this.renderMandatoryIcon(qid) : ''}\n                    </CardTitle>\n                    <QuestionType key={'question-type-' + qid} data={question} />\n                </CardBody>\n                </Card>\n            )}\n        )\n    }\n\n    render() {return this.getForms(this.props.value.questions)}\n}\n\nexport default connect(mapStateToProps)(Questions);\n","import React from 'react'\nimport {\n    FaExclamationTriangle,\n    FaCheckCircle,\n} from 'react-icons/fa'\n\nexport const Mandatory = (answered) => {\n    if (answered) {\n        return (\n            <FaCheckCircle\n                color=\"green\"\n                className=\"float-right\"\n            />\n        )\n    } else {\n        return (\n            <FaExclamationTriangle\n                color=\"red\"\n                className=\"float-right\"\n            />\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nclass Pagination extends Component {\n    constructor(props) {\n        super(props);\n        this.showQuestion = this.showQuestion.bind(this);\n        this.state = {\n          _showQuestion: ''\n        };\n    }\n\n    showQuestion(val) {\n        this.props.onSelectGroup(val)\n        this.setState({\n              _showQuestion: val,\n              _prevDisable: (this.props.data.prev <= 0 ? false : true),\n              _nextDisable: (this.props.data.next === (this.props.data.total) ? false : true)\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"btn btn-group ml-auto mt-2 mt-lg-0\">\n                <button className={\"btn \" + (this.state._prevDisable === false ? \"btn-secondary\" : \"btn-primary\")}\n                onClick={() => {this.showQuestion(this.props.data.prev)}}\n                >\n                    Prev\n                </button>\n                <button className={\"btn \" + (this.state._nextDisable === false ? \"btn-secondary\" : \"btn-primary\")}\n                onClick={() => {this.showQuestion(this.props.data.next)}}\n                >\n                    Next\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Pagination;\n","import React, { Component } from 'react'\nimport {connect } from 'react-redux';\nimport { mapStateToProps } from '../reducers/actions.js'\nimport { Toast, ToastHeader, ToastBody } from 'reactstrap'\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className='sidebar-heading'>\n                <div className=\"my-2\">\n                <Toast>\n                  <ToastHeader>\n                      <img alt=\"img-logo\" src=\"https://www.2scale.org/assets/default/img/logo_2scale_red.gif\" className='responsive-image'/>\n                    {this.props.value.surveyName}\n                  </ToastHeader>\n                  <ToastBody>\n                    Survey ID: {this.props.value.surveyId}\n                    <br/>\n                    Version: {this.props.value.version}\n                  </ToastBody>\n                </Toast>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\nimport swal from '@sweetalert/with-react'\nimport ReCAPTCHA from \"react-google-recaptcha\"\nimport axios from 'axios'\nimport { Spinner } from 'reactstrap'\nimport '../App.css'\nimport { PROD_URL } from '../util/Environment'\n\nconst API_URL = (PROD_URL ? \"https://2scale.tc.akvotest.org/akvo-flow-web-api/\" : process.env.REACT_APP_API_URL)\nconst SITE_KEY = \"6Lejm74UAAAAAA6HkQwn6rkZ7mxGwIjOx_vgNzWC\"\n\nclass Submit extends Component {\n\n    constructor(props) {\n        super(props);\n        this.showCaptcha = this.showCaptcha.bind(this)\n        this.showPassword = this.showPassword.bind(this)\n        this.submitForm = this.submitForm.bind(this)\n        this.handleCaptcha = this.handleCaptcha.bind(this)\n        this.handlePassword = this.handlePassword.bind(this)\n        this.showSpinner = this.showSpinner.bind(this)\n        this.state = {\n            _showCaptcha : this.props.value.captcha,\n            _showSpinner : false\n        }\n\t\tthis._reCaptchaRef = React.createRef();\n    }\n\n    handlePassword (event) {\n        console.log(event.target.value)\n        localStorage.setItem(\"_password\",event.target.value)\n    }\n\n\thandleCaptcha = value => {\n\t\tthis.setState({captcha: value});\n        this.props.submitState(true);\n\t\tif (this.state.captcha === null) this.setState({ expired: true });\n\t};\n\n    asyncScriptOnLoad = () => {\n        this.setState({ callback: \"called!\" });\n    };\n\n    showCaptcha = () => {\n        return (\n            <ReCAPTCHA\n                style={{\n                    'display': 'block',\n                    'overflow': 'hidden',\n                    'borderBottom': '1px solid #ddd',\n                    'padding': '8px',\n                }}\n                size=\"normal\"\n                theme=\"light\"\n                ref={this._reCaptchaRef}\n                sitekey={SITE_KEY}\n                onChange={this.handleCaptcha}\n                asyncScriptOnLoad={this.asyncScriptOnLoad}\n            />\n        )\n    }\n\n    showPassword = () => {\n        return (\n            <Fragment>\n                <label\n                    className=\"form-password-label\"\n                    htmlFor={\"submit-password\"}>\n                    Password:\n                </label>\n                <input\n                    className=\"form-control\"\n                    type=\"password\"\n                    name=\"submit-password\"\n                    onChange={this.handlePassword}\n                />\n                <hr/>\n            </Fragment>\n        )\n    }\n\n    submitForm () {\n        localStorage.setItem(\"_submissionStop\", Date.now())\n        this.setState({'_showSpinner': true})\n        axios.post(API_URL+ 'submit-form', localStorage)\n            .then(res => {\n                this.setState({'_showSpinner': false})\n                swal(\"Success!\", \"New datapoint is sent!\", \"success\")\n                return res;\n            }).catch((res, error) => {\n                console.log(res, error)\n                this.setState({'_showSpinner': false})\n                swal(\"Failed!\", \"Something Wrong!\", \"error\")\n                // setTimeout(function(){\n                //     localStorage.clear()\n                //     setTimeout(function(){\n                //         window.location.reload();\n                //     }, 5000);\n                // }, 1000);\n                // Debug swal(\"Oops!\", \"Something went wrong!\", \"error\")\n            })\n    }\n\n    showSpinner = value => {\n        return (\n            <Spinner size=\"sm\" color=\"light\" />\n        )\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.props.value.captcha ? this.showCaptcha() : false}\n                <div className=\"submit-block\">\n                    {this.props.value.submit? this.showPassword() : false}\n                    <button\n                        onClick={this.submitForm}\n                        className={\"btn btn-block btn-\" + ( this.props.value.submit ? \"primary\" : \"secondary\")\n                        }\n                        disabled={this.props.value.submit ? false : true}\n                    >\n                    { this.state._showSpinner ? <Spinner size=\"sm\" color=\"light\" /> : \"\" }\n                    <span>Submit</span>\n                    </button>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Submit);\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from './reducers/actions.js'\nimport swal from '@sweetalert/with-react'\nimport './App.css'\nimport 'filepond/dist/filepond.min.css';\nimport GroupButtons from './component/GroupButtons'\nimport GroupHeaders from './component/GroupHeaders'\nimport DataPoint from './component/DataPoint'\nimport Questions from './component/Questions'\nimport Pagination from './component/Pagination'\nimport Header from './component/Header'\nimport Submit from './component/Submit'\nimport {\n    FaArrowLeft,\n    FaArrowRight\n} from 'react-icons/fa'\nimport { PROD_URL } from './util/Environment.js'\n\nconst API_URL = (PROD_URL ? \"https://2scale.tc.akvo.org/akvo-flow-web-api/\" : process.env.REACT_APP_API_URL)\nconst CACHE_URL = (PROD_URL ? \"update\" : \"fetch\")\nconst DELAY = 10000000;\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.instance = this.props.match.params.instance\n        this.surveyId = this.props.match.params.surveyid\n        this.setFullscreen = this.setFullscreen.bind(this)\n        this.selectGroup = this.selectGroup.bind(this)\n        this.state = {\n            _fullScreen: false,\n            _prevGroup: false,\n            _nextGroup: true,\n            _totalGroup: this.props.value.groups.length\n        }\n    }\n\n    updateData = (data) => {\n        this.props.loadQuestions(data)\n        this.props.restoreAnswers(this.props.value.questions)\n        if (localStorage.getItem(\"_dataPointName\")){\n            this.props.reduceDataPoint(localStorage.getItem('_dataPointName'))\n        }\n        this.props.changeGroup(1)\n        localStorage.setItem(\"_version\", data.version)\n        localStorage.setItem(\"_instanceId\", data.app)\n        let questionId = []\n        let answerType = []\n        let questionGroupArray = Array.isArray(data.questionGroup)\n        if (!questionGroupArray) {\n            data.questionGroup = [data.questionGroup];\n        }\n        data.questionGroup.forEach((g) => {\n            g.question.forEach((q, i) => {\n                questionId.push(q.id)\n                answerType.push(q.type.toUpperCase())\n            })\n        })\n        localStorage.setItem(\"questionId\", questionId)\n        localStorage.setItem(\"answerType\", answerType)\n        this.setState({\n            ...data,\n            _nextGroup: (data.questionGroup.length >= 1 ? 0 : 1),\n            _currentGroup: 0,\n            _prevGroup: 0,\n            _totalGroup: data.questionGroup.length\n        })\n        let dataPointId = [\n            Math.random().toString(36).slice(2).substring(1, 5),\n            Math.random().toString(36).slice(2).substring(1, 5),\n            Math.random().toString(36).slice(2).substring(1, 5)\n        ]\n        localStorage.setItem(\"_dataPointId\", dataPointId.join(\"-\"))\n        localStorage.setItem(\"_submissionStart\", Date.now())\n        localStorage.setItem(\"_deviceId\", \"Deden Flow Support\")\n    }\n\n    updateQuestions = (index) => {\n        this.setState({\n            questionIndex: index\n        })\n    }\n\n    setFullscreen() {\n        const currentState = this.state._fullscreen\n        this.setState({\n            _fullscreen: !currentState\n        })\n    }\n\n    selectGroup = () => {\n        this.setState({\n            _prevGroup:false,\n            _nextGroup:true\n        })\n    }\n\n    componentDidMount() {\n        this.props.generateUUID({})\n        this.props.changeSettings({_isLoading:true})\n        localStorage.setItem(\"_formId\", this.surveyId)\n        localStorage.setItem(\"_instanceId\", this.instance)\n        axios.get(API_URL+ this.instance + '/' + this.surveyId + '/' + CACHE_URL)\n            .then(res => {\n                this.updateData(res.data)\n            })\n            .catch(error => {\n                console.log(error)\n                swal(\"Oops!\", \"Something went wrong!\", \"error\")\n                console.log(this.state)\n            })\n\t\tsetTimeout(() => {\n                  this.setState({ load: true });\n        }, DELAY);\n    }\n\n    render() {\n        return (\n            <div className={this.state._fullscreen ? \"wrapper d-flex toggled\": \"wrapper d-flex\"}>\n                <div className=\"sidebar-wrapper bg-light border-right\">\n                    <Header/>\n                    <GroupButtons />\n                    {( this.props.value.questions.length === 1 ? \"\" : (<Submit />) )}\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\n                        <button className=\"btn btn-primary\" onClick={this.setFullscreen}>\n                            {this.state._fullscreen ? <FaArrowRight /> : <FaArrowLeft />}\n                        </button>\n                        {( this.props.value.questions.length === 1 ? \"\" : (<DataPoint />) )}\n                        <Pagination onSelectGroup={this.selectGroup} data={\n                            {\n                             'prev':this.state._prevGroup,\n                             'total':this.state._totalGroup,\n                             'next':this.state._nextGroup\n                            }\n                        }/>\n                    </nav>\n                    <div className=\"container-fluid fixed-container\" key={'div-group-'+this.state.surveyId}>\n                        <GroupHeaders />\n                        <Questions />\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n//<Questions />\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { getQuestionType } from '../util/QuestionHandler.js'\nimport { isJsonString } from '../util/QuestionHandler.js'\nimport uuid from 'uuid/v4'\n\nconst initialState = {\n    surveyName:\"Loading..\",\n    surveyId:\"Loading..\",\n    version:\"Loading..\",\n    questions: [{\n        group: 1,\n        heading: null,\n        id: 1,\n        localeNameFlag: false,\n        mandatory: false ,\n        order: 1,\n        show: false,\n        text: \"Loading\",\n        type: \"text\",\n        validation: false,\n    }],\n    active: [],\n    answers: [],\n    mandatory: [],\n    submit: false,\n    captcha: false,\n    datapoint: null,\n    datapoints: [],\n    uuid: \"LOADING\",\n    groups: {\n        list: [{\n            index:1,\n            heading:\"Loading Questions\"\n        }],\n        active: 1,\n    },\n    pages:{\n    }\n}\n\nconst addQuestions = (data) => {\n    const relable = (q,g) => {\n        return {\n            ...q,\n            id: parseInt(q.id),\n            order: parseInt(q.order),\n            type: getQuestionType(q),\n            group: (g.index + 1),\n            heading: g.heading,\n            validation: (q.validationRule ? q.validationRule : false),\n            show: false\n        }\n    }\n    const mapgroup = (q, g) => {\n        return q.map(q => relable(q,g))\n    }\n    let questionGroup = data.questionGroup.map((g,i) => {\n        return {\n            ...g,\n            question: mapgroup(g.question, {heading:g.heading, index: i})\n        }\n    }).map(g => g.question)\n    return [].concat(...questionGroup);\n}\n\nconst listDatapoints = (data) => {\n    return addQuestions(data).filter(x => x.localeNameFlag).map(q => q.id)\n}\n\nconst listGroups = (data) => {\n    const group = data.questionGroup.map((x,i) => {return { index: (i + 1), heading: x.heading}});\n    return {\n        list: group,\n        active: 1\n    }\n}\n\nconst listMandatory = (data) => {\n    return addQuestions(data).filter(x => x.mandatory).map(x => x.id);\n}\n\nconst showHideQuestions = (orig, group) => {\n    let updated_answer = []\n    let active = orig.map(x => {\n        let show = true\n        let dependent = false\n        if(x.dependency) {\n            dependent = x.dependency\n            show = false\n        }\n        if(dependent){\n            let answer_value;\n            if (dependent[\"answer-value\"].includes(\"|\") > -1) {\n                answer_value = dependent[\"answer-value\"].split(\"|\")\n                answer_value = answer_value.map(b => {\n                    if (!isNaN(b)){\n                        b = parseInt(b);\n                    }\n                    return b;\n                })\n            }\n            if (localStorage.getItem(dependent.question) !== null) {\n                let answer = localStorage.getItem(dependent.question)\n                if (isJsonString(answer_value)) {\n                    answer = JSON.parse(answer_value)\n                }\n                if (!isNaN(answer_value)) {\n                    answer = answer.toString()\n                }\n                if (answer_value.includes(answer)){\n                    show = true\n                }\n                if (answer === answer_value) {\n                    show = true\n                }\n            }\n            if (localStorage.getItem(parseInt(dependent.question)) === null) {\n                show = false\n                localStorage.removeItem(x.id)\n            }\n        }\n        if (group) {\n            if(x.group !== group){\n                show = false\n            }\n        }\n        if (!group && !show) {\n            localStorage.removeItem(x.id)\n            if (dependent) {\n                let current_state = updated_answer.find(u => {\n                    return parseInt(u.id) === parseInt(dependent.question)\n                });\n                if (current_state.show === false) {\n                    show = false\n                }\n            }\n        }\n        updated_answer.push({...x, show:show, type: getQuestionType(x)})\n        return { ...x, show:show, type: getQuestionType(x)}\n    })\n    return active;\n}\n\nconst reduceDataPoint = (state) => {\n    return state\n}\n\nconst replaceAnswers = (questions, data, restore) => {\n    const question = questions.map(x => {\n        let answer = null\n        let stored = false\n        if (restore) {\n            stored = data.getItem(x.id);\n            answer = (stored ? stored : null)\n            try {\n                answer = JSON.parse(answer)\n            } catch (err) { }\n            answer = (parseInt(answer).isNan ? parseInt(answer) : answer)\n        }\n        return {\n            id: x.id,\n            answer: answer,\n            mandatory: x.mandatory\n        }\n    });\n    return question;\n}\n\nconst generateUUID = () => {\n    let id = uuid()\n    id = id.split('-')\n    id = id.map(x => {\n        return x.substring(0, 4);\n    }).slice(0,3);\n    return id.join('-');\n}\n\nconst checkSubmission = (answers, questions) => {\n    let activelist = showHideQuestions(questions, false).filter(x => x.show);\n    answers = answers.filter(x => x.mandatory).filter(x => x.answer !== null);\n    let active_mandatory = activelist.map(x => {\n        let answered = answers.filter(y => y.id === x.id).map(y => y.answer);\n        answered = (answered.length < 1 ? false : true)\n        return {\n            ...x,\n            answered: answered\n        }\n    }).filter(x => x.mandatory);\n    let answered_mandatory = active_mandatory.filter(x => x.answered)\n    let captcha = (answered_mandatory.length >= active_mandatory.length)\n    return captcha\n}\n\nconst setupPages = (current, data) => {\n    return {\n        ...current,\n        data\n    }\n}\n\nexport const questionReducers = (state = initialState, action) => {\n    switch(action.type){\n        case 'LOAD QUESTIONS':\n            return {\n                ...state,\n                surveyName: action.data.name,\n                surveyId: action.data.surveyId,\n                version: action.data.version,\n                questions: addQuestions(action.data),\n                datapoints: listDatapoints(action.data),\n                groups: listGroups(action.data),\n                mandatory: listMandatory(action.data)\n            }\n        case 'RESTORE ANSWERS':\n            return {\n                ...state,\n                answers: replaceAnswers(action.data, localStorage, true)\n            }\n        case 'REDUCE ANSWER':\n            return {\n                ...state,\n                answers: replaceAnswers(state.answers, action.answer, false),\n            }\n        case 'REDUCE DATAPOINT':\n            return {\n                ...state,\n                datapoint: reduceDataPoint(action.data)\n            }\n        case 'CHANGE GROUP':\n            return {\n                ...state,\n                questions: showHideQuestions(state.questions, action.group),\n                groups: {...state.groups, active: action.group}\n            }\n        case 'CHECK SUBMISSION':\n            return {\n                ...state,\n                captcha: checkSubmission(state.answers, state.questions),\n                submit: false\n            }\n        case 'SUBMIT STATE':\n            return {\n                ...state,\n                submit: action.data\n            }\n        case 'GENERATE UUID':\n            return {\n                ...state,\n                uuid: generateUUID(action.data)\n            }\n        case 'PAGES SETTINGS':\n            return {\n                ...state,\n                pages: setupPages(state.pages, action.data)\n            }\n        default:\n            return state;\n    }\n}\n\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from './Home'\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { questionReducers } from './reducers/questionReducers.js'\nimport { PROD_URL } from './util/Environment.js'\n\nconst BASE_URL = ( PROD_URL ? \"/akvo-flow-web\" : process.env.REACT_APP_BASE_URL);\n\nconst store = createStore(questionReducers)\n\nclass App extends Component {\n\n    render () {\n        return (\n\t        <Provider store={store}>\n            <BrowserRouter>\n                <Route path={ BASE_URL + \"/:instance/:surveyid\"} render={ props => <Home key=\"home\" {...props} />} />\n            </BrowserRouter>\n\t        </Provider>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nrequire('dotenv').config()\n\nif (localStorage.getItem(\"questionId\")){\n    let qlcache = localStorage.getItem(\"questionId\").split(\",\");\n    let atcache = localStorage.getItem(\"answerType\").split(\",\");\n    let photocache = qlcache.map((x,i) => {\n        return {id: x, type: atcache[i]}\n    }).filter(x => x.type === \"PHOTO\");\n    if (photocache.length > 0) {\n        photocache.forEach(x => localStorage.removeItem(x.id))\n    };\n}\nReactDOM.render(<App /> , document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}