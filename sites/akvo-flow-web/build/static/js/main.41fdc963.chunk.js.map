{"version":3,"sources":["reducers/actions.js","util/Loading.js","component/GroupButtons.js","component/GroupHeaders.js","component/DataPoint.js","util/QuestionHandler.js","types/MapForm.js","component/QuestionType.js","component/Questions.js","util/Badges.js","component/Pagination.js","component/Header.js","component/Submit.js","Home.js","reducers/questionReducers.js","App.js","serviceWorker.js","index.js"],"names":["mapStateToProps","state","value","mapDispatchToProps","dispatch","loadQuestions","data","type","changeGroup","group","restoreAnswers","reduceAnswer","answer","reduceDataPoint","checkSubmission","submitState","generateUUID","changeSettings","storeCascade","pulseloader","css","_templateObject","Loading","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","color","react_default","a","createElement","className","styles","BeatLoader_default","sizeUnit","size","React","Component","connect","GroupButtons","getUrl","replace","toLowerCase","getLoading","util_Loading","showQuestion","bind","assertThisInitialized","getQuestionList","listClass","_showQuestion","groups","_this2","list","map","key","index","onClick","href","heading","active","questions","length","GroupHeaders","getHeader","filter","g","react","DataPoint","index_esm","datapoint","uuid","getQuestionType","qtype","validationRule","validationType","options","isJsonString","str","JSON","parse","e","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","gapi","apikey","MapForm","toggleDraggable","setState","draggable","updateAddress","newpos","marker","update","address","lat","lng","axios","get","params","then","res","results","updatePosition","target","_latlng","getSpanAddress","Fragment","center","zoom","handleClick","handleSearch","handleText","newaddress","refs","leafletElement","panTo","setTimeout","latlng","_this3","newstate","invalidateSize","markerPosition","onChange","placeholder","Map","ref","TileLayer","attribution","url","Marker","position","onDragend","Popup","pathurl","registerPlugin","FilePondPluginImagePreview","QuestionType","instanceUrl","window","location","pathname","split","localStorage","getItem","id","other","setDpStorage","setDplStorage","getRadio","getPhoto","getGeo","renderRadio","getCascadeDropdown","renderCascade","renderCascadeOption","fetchCascade","limitCascade","handleChange","handleOther","handlePhoto","handleCascadeChange","handleMapChange","handleGlobal","questionid","qval","targetLevel","text","vals","storage","option","parseInt","current","x","stringify","concat","toConsumableArray","setItem","image","event","ddindex","selectedIndex","name","allowMultiple","multipleValue","indexOf","push","splice","removeItem","allowOther","checked","otherClass","toString","defineProperty","localeNameFlag","names","b","c","isNaN","forEach","edited","join","history","includes","unique","opts","undefined","objectSpread2","radioType","oi","main","opt","i","o","oname","htmlFor","lv","Array","isArray","levels","level","l","cascades","choose_options","dropdown","cascade","selected","ix","API_ORIGIN","cascadeResource","availcasc","isavailable","_this$setState3","err","_this4","_this4$setState","validation","answered","min","minVal","max","maxVal","_this5","react_filepond","server","process","method","onload","response","onerror","ondata","formData","append","patch","revert","data-max-file-size","rows","pos","types_MapForm","formtype","getCascade","getInput","getInputOther","getTextArea","Questions","getForms","renderMandatoryIcon","renderQuestion","qid","question","component_QuestionType","Mandatory","Card","show","CardBody","CardTitle","order","mandatory","Pagination","showGroup","prev_class","next_class","prev_target","next_target","Header","Toast","ToastHeader","surveyName","ToastBody","surveyId","version","SITE_KEY","Submit","handleCaptcha","captcha","expired","asyncScriptOnLoad","callback","showCaptcha","esm","style","display","overflow","borderBottom","padding","theme","_reCaptchaRef","sitekey","showPassword","handleUser","handlePassword","showSpinner","Spinner","submitForm","_showCaptcha","_showSpinner","createRef","Date","now","content_length","content","post","headers","Content-Length","Content-Type","swal","icon","title","closeOnClickOutside","closeOnEsc","button","timer","clear","origin","catch","error","console","log","submit","disabled","API_URL","Home","updateData","app","questionId","answerType","questionGroup","q","toUpperCase","dataPointId","Math","random","slice","substring","updateQuestions","questionIndex","instance","match","surveyid","setFullscreen","renderQuestions","renderGroups","_fullScreen","_rendered","currentState","_fullscreen","_isLoading","SURVEY_API","load","component_Questions","component_GroupButtons","component_Header","component_Submit","component_DataPoint","component_Pagination","component_GroupHeaders","initialState","answers","datapoints","pages","validateGroup","addQuestions","_ref","mapgroup","relable","apply","listDatapoints","listMandatory","showHideQuestions","orig","updated_answer","dependent","dependency","answer_value","find","u","replaceAnswers","restore","isNan","activelist","active_mandatory","y","setupPages","store","createStore","arguments","action","App","es","react_router_dom","react_router","path","render","src_Home","assign","Boolean","hostname","config","qlcache","atcache","photocache","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41fdc963.chunk.js","sourcesContent":["export const mapStateToProps = (state) => {\n    return {\n        value: state\n    }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        loadQuestions: (data) => dispatch({type:\"LOAD QUESTIONS\", data:data}),\n        changeGroup: (data) => dispatch({type:\"CHANGE GROUP\", group:data}),\n        restoreAnswers: (data) => dispatch({type:\"RESTORE ANSWERS\", data:data}),\n        reduceAnswer: (data) => dispatch({type:\"REDUCE ANSWER\", answer:data}),\n        reduceDataPoint: (data) => dispatch({type:\"REDUCE DATAPOINT\", data:data}),\n        checkSubmission: () => dispatch({type:\"CHECK SUBMISSION\"}),\n        submitState: (data) => dispatch({type:\"SUBMIT STATE\", data:data}),\n        generateUUID: (data) => dispatch({type:\"GENERATE UUID\", data:data}),\n        changeSettings: (data) => dispatch({type:\"PAGES SETTINGS\", data:data}),\n        storeCascade: (data) => dispatch({type:\"STORE CASCADE\", data:data})\n    }\n}\n\n","import React from 'react'\nimport {\n    connect\n} from 'react-redux'\nimport {\n    mapStateToProps,\n    mapDispatchToProps\n} from '../reducers/actions.js'\nimport {\n    css\n} from '@emotion/core'\nimport BeatLoader from 'react-spinners/BeatLoader'\nimport '../style/style.css'\n\nconst pulseloader = css ` margin: 0 auto; border-color: red; `\n\nclass Loading extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            color: '#007bff'\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.styles}>\n                 <h3 className=\"mt-2\">\n                   Loading Forms\n                </h3>\n            <BeatLoader\n                css={ pulseloader }\n                sizeUnit={ \"px\" }\n                size = { 20 }\n                color = { this.state.color }\n            />\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\n","import { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\nimport React, { Component } from 'react'\nimport Loading from '../util/Loading'\n\nclass GroupButtons extends Component {\n\n    constructor(props) {\n        super(props);\n        this.showQuestion = this.showQuestion.bind(this)\n        this.getQuestionList = this.getQuestionList.bind(this)\n        this.listClass = \"list-group-item list-group-item-action \"\n        this.getUrl = this.getUrl.bind(this)\n        this.state = {\n          _showQuestion: ''\n        };\n    }\n\n    getUrl = ((group) => (\n        \"#\" + group.replace(/ /g,\"-\").toLowerCase()\n    ))\n\n    showQuestion(group) {\n        this.props.changeGroup(group)\n    }\n\n    componentDidMount() {\n    }\n\n    getQuestionList(groups){\n        return groups.list.map((group) => (\n                <div className=\"list-group list-group-flush\" key={'group-' + group.index}>\n                <a onClick={() => {this.showQuestion(group.index)}}\n                href={this.getUrl(group.heading)}\n                className={(group.index === groups.active ?\n                        this.listClass + \" bg-current\" : this.listClass + \" bg-light\"\n                )}\n                >\n                    { group.heading }\n                </a>\n                </div>\n        ))\n    }\n\n    getLoading = () => (<Loading styles={'sidebar-loading'}/>)\n\n    render() {\n        return (\n            this.props.value.questions.length === 1 ?\n            this.getLoading() : this.getQuestionList(this.props.value.groups)\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupButtons);\n","import { connect } from 'react-redux'\nimport { mapStateToProps } from '../reducers/actions.js'\nimport React, { Component, Fragment } from 'react'\nimport Loading from '../util/Loading'\n\nclass GroupHeaders extends Component {\n\n    constructor(props) {\n        super(props);\n        this.getHeader = this.getHeader.bind(this)\n        this.getLoading = this.getLoading.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    getHeader = (groups) => {\n        let active = groups.list.filter(g => g.index === groups.active)\n        return active.map((group) => (\n            <Fragment key={group.index}>\n            <h2 className=\"mt-2\" >{group.heading}</h2>\n            <p>{group.heading}</p>\n            </Fragment>\n        ))\n    }\n\n    getLoading = () => (<Loading styles={'header-loading'}/>)\n\n    render() {\n        return (\n            this.props.value.questions.length === 1 ?\n            this.getLoading() : this.getHeader(this.props.value.groups)\n        )\n    }\n\n}\n\nexport default connect(mapStateToProps)(GroupHeaders);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { mapStateToProps } from '../reducers/actions.js'\nimport {\n    FaThumbtack,\n} from 'react-icons/fa'\n\nclass DataPoint extends Component {\n\n    render() {\n        return (\n            <Fragment>\n            <div className=\"data-point\">\n                <h3 className=\"data-point-name\">\n                    <FaThumbtack color=\"#9ea4a8\" className=\"data-point-icon\"/>\n                    {this.props.value.datapoint}\n                </h3>\n                <span className=\"data-point-id\">{this.props.value.uuid}</span>\n            </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(DataPoint);\n","export const getQuestionType = (props) => {\n    let qtype = props.type\n    if (props.validationRule) {\n        qtype = (props.validationRule.validationType === \"numeric\" ? \"number\" : \"text\")\n    }\n    if (props.options) {\n        qtype = \"option\"\n    }\n    switch (qtype) {\n        case \"signature\": break\n        case \"photo\": return \"photo\"\n        case \"number\": return \"number\"\n        case \"option\": return \"option\"\n        case \"cascade\": return \"cascade\"\n        case \"geo\": return \"geo\"\n        case \"date\": return \"date\"\n        default:\n            return \"text\"\n    }\n    return qtype\n}\n\nexport const isJsonString = (str) => {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n","import React, { Component, Fragment, createRef } from 'react';\nimport {\n    Map,\n    Marker,\n    Popup,\n    TileLayer\n} from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst gapi = 'https://maps.googleapis.com/maps/api/geocode/json';\nconst apikey = 'AIzaSyCIv2SUL6gt0gOgr8M9XLGpGIpEVwaR4A0'\n\nclass MapForm extends Component {\n\n    constructor(props) {\n        super(props);\n\t\tthis.state = {\n\t\t\tcenter: {\n\t\t\t\tlat: 6.48998,\n\t\t\t\tlng: 18.10546,\n\t\t\t},\n\t\t\tmarker: {\n\t\t\t\tlat: 6.48998,\n\t\t\t\tlng: 18.10546,\n\t\t\t},\n\t\t\tzoom: 4,\n\t\t\tdraggable: true,\n            address: false,\n            value:'',\n\t\t}\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleDraggable= this.toggleDraggable.bind(this);\n        this.updateAddress = this.updateAddress.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleText = this.handleText.bind(this);\n        this.getSpanAddress = this.getSpanAddress.bind(this);\n    }\n\n    toggleDraggable = () => {\n        this.setState({ draggable: !this.state.draggable })\n    }\n\n    updateAddress = () => {\n        const newpos = this.state.marker;\n        this.props.update(newpos);\n        const address = {'address':newpos.lat + ',' + newpos.lng,'key':apikey}\n        axios.get(gapi, {params:address})\n            .then( res => {\n                this.setState({address: res.data.results[0]['formatted_address']})\n            })\n    }\n\n    updatePosition = (e) => {\n        const newpos = {\n            lat: e.target._latlng.lat,\n            lng: e.target._latlng.lng\n        }\n        this.setState({ marker: newpos });\n        this.updateAddress();\n    }\n\n    handleText(e) {\n        this.setState({ value: e.target.value });\n    }\n\n    handleSearch() {\n        const address = {'address': this.state.value ,'key':apikey}\n        axios.get(gapi, {params:address})\n            .then( res => {\n                const newpos= res.data.results[0]['geometry']['location'];\n                const newaddress= res.data.results[0]['formatted_address'];\n                this.setState({marker:newpos});\n                const map = this.refs.map.leafletElement;\n                map.panTo(newpos);\n                setTimeout(() => {\n                    this.setState({center:newpos});\n                    this.setState({address:newaddress});\n                }, 500);\n                this.setState({zoom:17});\n            })\n    }\n\n    handleClick(e) {\n        const newpos = {\n            lat: e.latlng.lat,\n            lng: e.latlng.lng\n        }\n        this.setState({ marker: newpos });\n        this.updateAddress();\n    }\n\n    componentDidMount() {\n\t\tlet newstate = {\n            center: this.props.center,\n            marker: this.props.center,\n            zoom: 4,\n\t\t\tdraggable: true,\n            address: false,\n            value:'',\n        };\n        const map = this.refs.map.leafletElement;\n        setTimeout(() => {\n            map.invalidateSize();\n            this.setState(newstate);\n            this.updateAddress();\n        }, 3000);\n    }\n\n    getSpanAddress = () => {\n        return (\n            <>\n                <span className=\"text-right badge badge-secondary\">\n                {this.state.address}\n                </span>\n                <br/>\n            </>\n        )\n    }\n\n    render() {\n        const markerPosition = [this.state.marker.lat, this.state.marker.lng]\n        return (\n            <Fragment>\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    value={this.state.value}\n                    onChange={this.handleText}\n                    placeholder=\"Search Address\"\n                />\n                </div>\n                <div className=\"col-md-3\">\n                <button\n                    className=\"btn btn-block btn-success\"\n                    onClick={this.handleSearch}\n                >\n                    Search\n                </button>\n                </div>\n            </div>\n            <br/>\n            <Map\n                onClick={this.handleClick}\n                center={this.state.center}\n                zoom={this.state.zoom}\n                ref=\"map\"\n            >\n                <TileLayer\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <Marker\n                    refs=\"marker\"\n                    position={markerPosition}\n                    draggable={this.state.draggable}\n                    onDragend={this.updatePosition}\n                >\n                    <Popup>\n                        <div>Current Location:<br/>\n                        Latitude: {this.state.marker.lat} <br/>\n                        Longitude: {this.state.marker.lng} <br/>\n                        Address: {this.state.address} </div>\n                    </Popup>\n                </Marker>\n            </Map>\n                <div className=\"row\">\n                    <div className=\"col-md-12 text-center\">\n                        <hr/>\n                        { this.state.address ? this.getSpanAddress() : \"\" }\n                        <span className=\"badge badge-success\">\n                            lat: {this.state.marker.lat}, lng: {this.state.marker.lng}\n                        </span>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default MapForm;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\nimport axios from 'axios';\nimport { isJsonString } from  '../util/QuestionHandler.js'\nimport { PROD_URL } from '../util/Environment'\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\nimport MapForm from '../types/MapForm.js'\n\nconst API_ORIGIN = (PROD_URL ? ( window.location.origin + \"/\" + window.location.pathname.split('/')[1] + \"-api/\" ) : process.env.REACT_APP_API_URL);\nconst pathurl = (PROD_URL ? 2 : 1);\n\nregisterPlugin(FilePondPluginImagePreview);\n\nclass QuestionType extends Component {\n\n    constructor(props) {\n        super(props)\n        this.instanceUrl = window.location.pathname.split('/')[pathurl]\n        this.value = localStorage.getItem(this.props.data.id)\n        this.other = localStorage.getItem(\"other_\" + this.props.data.id)\n        this.state = {\n            value: this.value ? this.value : '',\n            other: this.other ? this.other : '',\n        }\n        this.setDpStorage = this.setDpStorage.bind(this);\n        this.setDplStorage = this.setDplStorage.bind(this);\n        this.getRadio = this.getRadio.bind(this);\n        this.getPhoto = this.getPhoto.bind(this);\n        this.getGeo = this.getGeo.bind(this);\n        this.renderRadio = this.renderRadio.bind(this);\n        this.getCascadeDropdown = this.getCascadeDropdown.bind(this);\n        this.renderCascade = this.renderCascade.bind(this);\n        this.renderCascadeOption = this.renderCascadeOption.bind(this);\n        this.fetchCascade = this.fetchCascade.bind(this);\n        this.limitCascade = 0;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleOther = this.handleOther.bind(this);\n        this.handlePhoto = this.handlePhoto.bind(this);\n        this.handleCascadeChange = this.handleCascadeChange.bind(this);\n        this.handleMapChange = this.handleMapChange.bind(this);\n        this.handleGlobal = this.handleGlobal.bind(this);\n    }\n\n    handleGlobal(questionid, qval){\n        if (qval === \"\" || qval === null){\n            this.props.restoreAnswers(this.props.value.questions)\n        } else {\n            this.props.restoreAnswers(this.props.value.questions)\n        }\n        this.props.changeGroup(this.props.value.groups.active)\n        this.props.checkSubmission()\n    }\n\n    handleCascadeChange(targetLevel, text, id, value) {\n        let vals;\n        let storage = {id:targetLevel,text:text, option:parseInt(value)}\n        if (localStorage.getItem(id)) {\n            let multipleValue = JSON.parse(localStorage.getItem(id))\n            let current = multipleValue.filter(x => x.id < targetLevel);\n            vals = JSON.stringify([...current, storage])\n        } else {\n            vals = JSON.stringify([storage])\n        }\n        if (targetLevel !== 0){\n            localStorage.setItem(this.props.data.id, vals)\n            this.handleGlobal(this.props.data.id, vals)\n        }\n        return true\n    }\n\n    handlePhoto(image) {\n        let id = this.props.data.id\n        localStorage.setItem(id, image)\n        this.setState({value: image})\n        this.handleGlobal(id, image)\n    }\n\n    handleMapChange(value) {\n        let id = this.props.data.id\n        value = value.lat + '|' + value.lng + '|0';\n        localStorage.setItem(id, value);\n        this.setState({value: value});\n        let datapoints = parseInt(localStorage.getItem('_dplOrder'));\n        if (datapoints === id){\n            localStorage.setItem('_dataPointLocation', value)\n        };\n        this.handleGlobal(id, value);\n    }\n\n    handleChange(event) {\n        let id = this.props.data.id\n        let value = event.target.value\n        let target = event.target.id;\n        if (target.split(\"_\")[0]) {\n            return this.handleOther(target, value);\n        }\n        if (this.props.data.type === \"cascade\") {\n            let ddindex = event.target.selectedIndex\n            let text = event.target[ddindex].text\n            let targetLevel = parseInt(event.target.name.split('-')[1]) + 1\n            this.handleCascadeChange(targetLevel, text, id, value)\n            if (this.limitCascade > targetLevel) {\n                this.getCascadeDropdown(value, targetLevel)\n            }\n        }\n        else if (this.props.data.options && this.props.data.options.allowMultiple)  {\n            let multipleValue = []\n            if (localStorage.getItem(id)) {\n                multipleValue = JSON.parse(localStorage.getItem(id))\n            }\n            if (multipleValue.indexOf(value) === -1) {\n                multipleValue.push(value)\n            } else {\n\t\t\t\tmultipleValue.splice(multipleValue.indexOf(value), 1)\n            }\n\t\t\tif (multipleValue.length > 0) {\n            \tlocalStorage.setItem(id, JSON.stringify(multipleValue))\n            \tthis.setState({value: multipleValue})\n                this.handleGlobal(id, value)\n\t\t\t} else {\n\t\t\t\tlocalStorage.removeItem(id)\n            \tthis.setState({value: \"\"})\n\t\t\t}\n            if(this.props.data.options.allowOther) {\n                if (value === \"Other Option\" && event.target.checked){\n                    let otherClass = \"other_\" + this.props.data.id.toString();\n                    this.setState({[otherClass]: true});\n                }\n                if (value === \"Other Option\" && !event.target.checked){\n                    let otherClass = \"other_\" + this.props.data.id.toString();\n                    this.setState({[otherClass]: false});\n                }\n            }\n            this.handleGlobal(id, value)\n        } else {\n            localStorage.setItem(id, value)\n            this.setState({value: value})\n            this.handleGlobal(id, value)\n        }\n        if(value === \"\") {\n            this.setState({value: value})\n            localStorage.removeItem(id)\n            this.handleGlobal(id, value)\n        }\n        if (this.props.data.localeNameFlag) {\n            let a = JSON.parse(localStorage.getItem('_dpOrder'));\n            let names = []\n            a.map((b) => {\n                let c = localStorage.getItem(b)\n                if (c) {\n                    if (isJsonString(c) && isNaN(c)) {\n                        let cascade = JSON.parse(c).map(x => x.text)\n                        cascade.forEach(name => {\n                            names.push(name)\n                        });\n                    } else {\n                        names.push(c)\n                    }\n                }\n                return true\n            })\n            let edited = names.join(\" - \")\n            localStorage.setItem(\"_dataPointName\", edited)\n            this.props.reduceDataPoint(localStorage.getItem('_dataPointName'))\n        }\n    }\n\n    handleOther(target, value) {\n        let history = \"\";\n        if (localStorage.getItem(target)) {\n            history = localStorage.getItem(target);\n        }\n        history = value;\n        localStorage.setItem(target, history);\n        this.setState({other:history});\n    }\n\n    setDpStorage () {\n        if (localStorage.getItem('_dpOrder')) {\n            let a = JSON.parse(localStorage.getItem('_dpOrder'));\n            if (!a.includes(this.props.data.id)) {\n                a.push(this.props.data.id)\n            }\n            localStorage.setItem('_dpOrder', JSON.stringify(a));\n        } else {\n            localStorage.setItem('_dpOrder', JSON.stringify([this.props.data.id]));\n        }\n\n    }\n\n    setDplStorage () {\n        localStorage.setItem('_dplOrder', this.props.data.id);\n    }\n\n    getRadio (data, unique) {\n        let opts = data.options\n        if (opts.allowMultiple === undefined) {\n            opts = {...opts, allowMultiple: false}\n        }\n        let radioType = (opts.allowMultiple ? \"checkbox\" : \"radio\")\n        let ao = opts.allowOther;\n        if (ao) {\n            if ( opts.option.length > 1 ) {\n                let oi = opts.option.length + 1;\n                let main = opts.option.map((opt, i) => this.renderRadio(false, opt, i, data.id, radioType, unique))\n                let other = this.renderRadio(true, {text: \"Other\", value:\"Other Option\"}, oi, data.id, radioType, unique)\n                return [...main, other];\n            }\n            let main = this.renderRadio(false, opts.option, 0, data.id, radioType, unique)\n            let other = this.renderRadio(true, {text: \"Other\", value:\"Other Option\"}, 1 , data.id, radioType, unique)\n            return [...main, other];\n        }\n        return (\n            opts.option.length > 1\n            ?\n            (opts.option.map((opt, i) => this.renderRadio(false, opt, i, data.id, radioType, unique)))\n            :\n            (this.renderRadio(false, opts.option, 0, data.id, radioType, unique))\n        )\n    }\n\n    renderRadio (o, opt, i, id, radioType, unique) {\n        let checked = () => (localStorage.getItem(id) === opt.value)\n\t\tif (radioType === \"checkbox\" && this.state.value.indexOf(opt.value) >= 0) {\n\t\t\tchecked = () => (true)\n\t\t}\n        if (o) {\n            let oname = \"other_\"+id.toString();\n            return (\n                <div key={unique + '-div-radio-' + i.toString()} >\n                    <div className=\"form-check\" >\n                        <input\n                            key={unique + '-radio-' + i.toString()}\n                            className=\"form-check-input\"\n                            type={radioType}\n                            name={id}\n                            value={opt.value}\n                            onChange={this.handleChange}\n                            checked={checked()}\n                        />\n                        <label\n                            className=\"form-check-label badge badge-secondary\"\n                            htmlFor={\"input-\" + (id).toString()}>\n                            {opt.text}\n                        </label>\n                    </div>\n                <hr/>\n                    <div className={checked() ? \"\":\"hidden\"}>\n                        <label\n                            className=\"form-label\"\n                            htmlFor={oname}>\n                            Other Answer:\n                        </label>\n                        <input\n                            className=\"form-control\"\n                            key={unique + \"-radio-other-\" + i.toString()}\n                            value={this.state.other}\n                            type=\"text\"\n                            name={oname}\n                            id={oname}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"form-check\"\n                 key={unique + '-div-radio-' + i.toString()}\n            >\n                <input\n                    key={unique + '-radio-' + i.toString()}\n                    className=\"form-check-input\"\n                    type={radioType}\n                    name={id}\n                    value={opt.value}\n                    onChange={this.handleChange}\n                    checked={checked()}\n            />\n                <label\n                    className=\"form-check-label\"\n                    htmlFor={\"input-\" + (id+i).toString()}>\n                    {opt.text}\n                </label>\n            </div>\n        )\n    }\n\n    getCascade (opts, lv, unique) {\n        if (Array.isArray(opts.levels.level)){\n            let l = opts.levels.level.length - 1\n            return opts.levels.level.map((opt, i) => {\n                this.limitCascade = i + 1\n                return this.renderCascade(opt, i, l, unique)\n            });\n        }\n        this.limitCascade = 1;\n        return this.renderCascade(opts.levels.level, 0, 0, unique);\n    }\n\n    renderCascade (opt, i, l, unique) {\n        let cascades = []\n        let choose_options = \"cascade_\" + i\n        let dropdown = this.state[this.state[choose_options]]\n        let cascade = (\n            <div key={unique + '-dropdown-' + i}>\n            <div>{opt.text}</div>\n            <select\n                className=\"form-control\"\n                value={ this.state.selected } type=\"select\"\n                name={ this.props.data.id.toString() + '-' + i}\n                onChange={this.handleChange}\n            >\n                <option key={unique + '-cascade-options-' + 0} value={this.state.value}>Please Select</option>\n                {this.renderCascadeOption(dropdown,(i+1),opt.text, unique)}\n            </select>\n            </div>\n        );\n        cascades.push(cascade)\n        if (this.limitCascade <= i) {\n            this.handleChange()\n        }\n        return cascades.map((x, i) => x)\n    }\n\n    renderCascadeOption (data,targetLevel, unique) {\n        if(data) {\n            return data.map((x, i) => {\n                let options = (\n                    <option\n                        key={unique + '-cascade-options-' + i}\n                        value={x.id}\n                    >\n                        {x.name}\n                    </option>\n                )\n                return options\n            })\n        }\n    }\n\n    getCascadeDropdown(lv, ix) {\n        if (this.props.data.type === \"cascade\") {\n            let url = API_ORIGIN + 'cascade/' + this.instanceUrl + '/' + this.props.data.cascadeResource + '/' + lv\n            let options = \"options_\" + lv\n            let cascade = \"cascade_\" + ix\n            let availcasc = this.props.value.cascade;\n            let isavailable = false;\n            let res;\n            if (availcasc.length > 0) {\n                isavailable = true;\n            }\n            if (isavailable) {\n                res = availcasc.filter(x => {\n                    return x.url === url;\n                })[0];\n            }\n            if (res) {\n                try {\n                    this.setState({\n                        [options]: res.data,\n                        [cascade]: [options],\n                        value: res.data[ix]['id']\n                    })\n                } catch (err) {\n                    localStorage.removeItem(this.props.data.id)\n                }\n            }\n            if (!res) {\n                this.fetchCascade(lv, ix, url, options, cascade);\n            }\n        }\n    }\n\n    fetchCascade(lv, ix, url, options, cascade) {\n        axios.get(url).then((res) =>{\n            try {\n                this.setState({\n                    [options]: res.data,\n                    [cascade]: [options],\n                    value: res.data[ix]['id']\n                })\n            } catch (err) {\n                localStorage.removeItem(this.props.data.id)\n            }\n            return res\n        }).then((res) => {\n            this.props.storeCascade({\n                url:url,\n                data:res.data\n            })\n        })\n    }\n\n    getInput(data, unique, validation, answered, type) {\n        return (\n            <input\n                className={data.type === \"photo\" ? \"form-control-file\" : \"form-control\"}\n                value={answered ? answered : \"\"}\n                min={validation.minVal ? validation.minVal : \"\"}\n                max={validation.maxVal ? validation.maxVal: \"\"}\n                key={unique}\n                type={type}\n                name={'Q-' + data.id.toString()}\n                onChange={this.handleChange}\n            />\n        )\n    }\n\n    getInputOther(data, unique, answered, type) {\n        return (\n            <input\n                className={data.type === \"photo\" ? \"form-control-file\" : \"form-control\"}\n                value={answered ? answered : \"\"}\n                key={unique}\n                type={type}\n                name={'Q-' + data.id.toString()}\n                onChange={this.handleChange}\n            />\n        )\n    }\n\n    getPhoto(data, unique, answered, type) {\n        return (\n            <FilePond\n                server={(\n                    {\n                        url: API_ORIGIN,\n                        process: {\n                            url: 'upload-image',\n                            method: 'POST',\n                            onload: (response) => {\n                                this.handlePhoto(response)\n                                return response.key\n                            },\n                            onerror: (response) => {\n                                return response.data\n                            },\n                            ondata: (formData) => {\n                                formData.append('Status', 'Uploaded');\n                                return formData;\n                            }\n                        },\n                        patch: {\n                            url: '.upload-image',\n                            method: 'GET',\n                            onload: (response) => {\n                                this.handlePhoto(response)\n                                return response.key\n                            },\n                            onerror: (response) => {\n                                return response.data\n                            }\n                        },\n                        revert: {\n                            url: '.delete-image/' + localStorage.getItem(data.id),\n                            method: 'GET',\n                            onload: (response) => {\n                                localStorage.removeItem(data.id)\n                            }\n                        }\n                    }\n                )}\n                key={unique}\n                allowMultiple={false}\n                name={'Q-' + data.id.toString()}\n                data-max-file-size=\"500kb\"\n            />\n        )\n    }\n\n    getTextArea(data, unique, answered, type) {\n        return (\n            <textarea\n                key={unique}\n                rows=\"3\"\n                className=\"form-control\"\n                value={answered ? answered : \"\"}\n                type={type}\n                onChange={this.handleChange}\n                name={'Q-' + data.id.toString()}\n            />\n        )\n    }\n\n    getGeo(data, unique) {\n        let id = this.props.data.id;\n        let pos = {lat:51.505, lng:-0.09};\n        if (localStorage.getItem(id)) {\n            pos = localStorage.getItem(id);\n            pos = pos.split('|');\n            pos = {lat: pos[0], lng: pos[1]};\n        }\n        return (\n            <MapForm\n                center={pos}\n                zoom={13}\n                update={this.handleMapChange}\n            />\n        );\n    }\n\n    componentDidMount () {\n        if (this.props.data.type === \"cascade\"){\n            localStorage.removeItem(this.props.data.id)\n            this.getCascadeDropdown(0, 0)\n        }\n        if (localStorage.getItem(this.props.data.id) !== null){\n            this.props.checkSubmission();\n        };\n    }\n\n    render() {\n        let data = this.props.data\n        let key = 'question-form-' + data.id.toString()\n        let formtype = data.type\n        let answered = localStorage.getItem(data.id)\n        if (data.localeNameFlag) {\n            this.setDpStorage()\n        }\n        if ('localeLocationFlag' in data){\n            this.setDplStorage()\n        }\n        switch(formtype) {\n            case \"option\":\n                return this.getRadio(data, key)\n            case \"cascade\":\n                return this.getCascade(data,0, key)\n            case \"number\":\n                return this.getInput(data, key, data.validationRule, answered, formtype)\n            case \"photo\":\n                return this.getPhoto(data, key, answered, \"file\")\n            case \"date\":\n                return this.getInputOther(data, key, answered, formtype)\n            case \"geo\":\n                return this.getGeo(data, key)\n            default:\n                return this.getTextArea(data, key, answered, formtype)\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionType);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { mapStateToProps } from '../reducers/actions.js'\nimport QuestionType from './QuestionType.js'\nimport { Mandatory } from '../util/Badges'\nimport {\n    Card,\n    CardBody,\n    CardTitle\n} from 'reactstrap'\nimport '../App.css'\n\nclass Questions extends Component {\n\n    constructor(props) {\n        super(props);\n        this.getForms = this.getForms.bind(this);\n        this.isJsonString = this.isJsonString.bind(this);\n        this.renderMandatoryIcon = this.renderMandatoryIcon.bind(this);\n        this.renderQuestion = this.renderQuestion.bind(this);\n    }\n\n    isJsonString(str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    renderQuestion(qid, question) {\n        return(\n           <QuestionType key={'question-type-' + qid} data={question} />\n        )\n    }\n\n    renderMandatoryIcon(qid) {\n        let answered = false;\n        if (localStorage.getItem(qid)){\n            answered = true;\n        }\n        return (Mandatory(answered));\n    }\n\n    getForms(questions){\n        return questions.map((question) => {\n            let qid = question.id.toString()\n            return (\n                <Card key={\"card-\" + qid} className= {question.show === false ? 'd-none' : ''} >\n                <CardBody key={\"card-body-\" + qid} id={\"card-body-\" + qid}>\n                    <CardTitle key={\"card-title-\" + qid}>\n                        { (question.order.toString()) + '. ' + question.text }\n                        { question.mandatory ? this.renderMandatoryIcon(qid) : ''}\n                    </CardTitle>\n                    {this.renderQuestion(qid, question)}\n                </CardBody>\n                </Card>\n            )}\n        )\n    }\n\n    render() {\n        return this.getForms(this.props.value.questions);\n    }\n}\n\nexport default connect(mapStateToProps)(Questions);\n","import React from 'react'\nimport {\n    FaExclamationTriangle,\n    FaCheckCircle,\n} from 'react-icons/fa'\n\nexport const Mandatory = (answered) => {\n    if (answered) {\n        return (\n            <FaCheckCircle\n                color=\"green\"\n                className=\"float-right\"\n            />\n        )\n    } else {\n        return (\n            <FaExclamationTriangle\n                color=\"red\"\n                className=\"float-right\"\n            />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\n\nclass Pagination extends Component {\n    constructor(props) {\n        super(props);\n        this.showGroup = this.showGroup.bind(this);\n    }\n\n    showGroup(group) {\n        return this.props.changeGroup(group)\n    }\n\n    render() {\n        const prev_class = this.props.value.groups.active <= 1 ? \"btn-secondary\" : \"btn-primary\"\n        const next_class = this.props.value.groups.active === this.props.value.groups.list.length ? \"btn-secondary\" : \"btn-primary\"\n        const prev_target = this.props.value.groups.active - 1;\n        const next_target = this.props.value.groups.active + 1;\n        return (\n            <div className=\"btn btn-group ml-auto mt-2 mt-lg-0\">\n                <button className={\"btn \" + prev_class}\n                onClick={() => {this.showGroup(prev_target)}}\n                >\n                    Prev\n                </button>\n                <button className={\"btn \" + next_class}\n                onClick={() => {this.showGroup(next_target)}}\n                >\n                    Next\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n","import React, { Component } from 'react'\nimport {connect } from 'react-redux';\nimport { mapStateToProps } from '../reducers/actions.js'\nimport { Toast, ToastHeader, ToastBody } from 'reactstrap'\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className='sidebar-heading'>\n                <div className=\"my-2\">\n                <Toast>\n                  <ToastHeader>\n                    {this.props.value.surveyName}\n                  </ToastHeader>\n                  <ToastBody>\n                    Survey ID: {this.props.value.surveyId}\n                    <br/>\n                    Version: {this.props.value.version}\n                  </ToastBody>\n                </Toast>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../reducers/actions.js'\nimport swal from '@sweetalert/with-react'\nimport ReCAPTCHA from \"react-google-recaptcha\"\nimport axios from 'axios'\nimport { Spinner } from 'reactstrap'\nimport '../App.css'\nimport { PROD_URL } from '../util/Environment'\n\nconst API_ORIGIN = (PROD_URL ? ( window.location.origin + \"/\" + window.location.pathname.split('/')[1] + \"-api/\" ) : process.env.REACT_APP_API_URL);\nconst SITE_KEY = \"6Lejm74UAAAAAA6HkQwn6rkZ7mxGwIjOx_vgNzWC\"\n\nclass Submit extends Component {\n\n    constructor(props) {\n        super(props);\n        this.showCaptcha = this.showCaptcha.bind(this)\n        this.showPassword = this.showPassword.bind(this)\n        this.submitForm = this.submitForm.bind(this)\n        this.handleCaptcha = this.handleCaptcha.bind(this)\n        this.handlePassword = this.handlePassword.bind(this)\n        this.handleUser = this.handleUser.bind(this)\n        this.showSpinner = this.showSpinner.bind(this)\n        this.state = {\n            _showCaptcha : this.props.value.captcha,\n            _showSpinner : false\n        }\n\t\tthis._reCaptchaRef = React.createRef();\n    }\n\n    handlePassword (event) {\n        localStorage.setItem(\"_password\",event.target.value)\n    }\n\n    handleUser (event) {\n        localStorage.setItem(\"_username\",event.target.value)\n    }\n\n\thandleCaptcha = value => {\n\t\tthis.setState({captcha: value});\n        this.props.submitState(true);\n\t\tif (this.state.captcha === null) this.setState({ expired: true });\n\t};\n\n    asyncScriptOnLoad = () => {\n        this.setState({ callback: \"called!\" });\n    };\n\n    showCaptcha = () => {\n        return (\n            <ReCAPTCHA\n                style={{\n                    'display': 'block',\n                    'overflow': 'hidden',\n                    'borderBottom': '1px solid #ddd',\n                    'padding': '8px',\n                }}\n                size=\"normal\"\n                theme=\"light\"\n                ref={this._reCaptchaRef}\n                sitekey={SITE_KEY}\n                onChange={this.handleCaptcha}\n                asyncScriptOnLoad={this.asyncScriptOnLoad}\n            />\n        )\n    }\n\n    showPassword = () => {\n        return (\n            <Fragment>\n                <label\n                    className=\"form-password-label\"\n                    htmlFor={\"submit-username\"}>\n                    Username:\n                </label>\n                <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    name=\"submit-username\"\n                    onChange={this.handleUser}\n                />\n                <label\n                    className=\"form-password-label\"\n                    htmlFor={\"submit-password\"}>\n                    Password:\n                </label>\n                <input\n                    className=\"form-control\"\n                    type=\"password\"\n                    name=\"submit-password\"\n                    onChange={this.handlePassword}\n                />\n                <hr/>\n            </Fragment>\n        )\n    }\n\n    submitForm () {\n        localStorage.setItem(\"_submissionStop\", Date.now())\n        this.setState({'_showSpinner': true})\n        let content_length =  JSON.stringify(localStorage).length.toString()\n        let content = localStorage;\n        axios.post(API_ORIGIN+ 'submit-form',\n                content, { headers: {\n                'Content-Length': content_length,\n                'Content-Type': 'application/json'\n                    }\n                }\n            )\n            .then(res => {\n                swal({\n                    icon: \"success\",\n                    title: \"Success!\",\n                    text: \"New datapoint is sent! clearing form...\",\n                    closeOnClickOutside: false,\n                    closeOnEsc: false,\n                    button: false,\n                    timer: 3200\n                })\n                this.setState({'_showSpinner': false})\n                setTimeout(function(){\n                     localStorage.clear()\n                     setTimeout(function(){\n                         window.location.replace(window.location.origin + window.location.pathname);\n                     }, 3000);\n                }, 500);\n                return res;\n            }).catch((res, error) => {\n                console.log(res, error)\n                this.setState({'_showSpinner': false})\n                swal(\"Oops!\", \"Something went wrong!\", \"error\")\n            })\n    }\n\n    showSpinner = value => {\n        return (\n            <Spinner size=\"sm\" color=\"light\" />\n        )\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.props.value.captcha ? this.showCaptcha() : false}\n                <div className=\"submit-block\">\n                    {this.props.value.submit? this.showPassword() : false}\n                    <button\n                        onClick={this.submitForm}\n                        className={\"btn btn-block btn-\" + ( this.props.value.submit ? \"primary\" : \"secondary\")\n                        }\n                        disabled={this.props.value.submit ? false : true}\n                    >\n                    { this.state._showSpinner ? <Spinner size=\"sm\" color=\"light\" /> : \"\" }\n                    <span>Submit</span>\n                    </button>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Submit);\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from './reducers/actions.js'\nimport swal from '@sweetalert/with-react'\nimport './App.css'\nimport 'filepond/dist/filepond.min.css';\nimport GroupButtons from './component/GroupButtons'\nimport GroupHeaders from './component/GroupHeaders'\nimport DataPoint from './component/DataPoint'\nimport Questions from './component/Questions'\nimport Pagination from './component/Pagination'\nimport Header from './component/Header'\nimport Submit from './component/Submit'\nimport {\n    FaArrowLeft,\n    FaArrowRight\n} from 'react-icons/fa'\nimport { PROD_URL } from './util/Environment.js'\n\nconst API_URL = (PROD_URL ? window.location.href.replace(\"flow-web\",\"flow-web-api\") : process.env.REACT_APP_API_URL)\nconst CACHE_URL = (PROD_URL ? \"update\" : \"fetch\")\nconst DELAY = 10000000;\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.instance = this.props.match.params.instance;\n        this.surveyId = this.props.match.params.surveyid;\n        this.setFullscreen = this.setFullscreen.bind(this);\n        this.renderQuestions = this.renderQuestions.bind(this);\n        this.renderGroups = this.renderGroups.bind(this);\n        this.state = {\n            _fullScreen: false,\n            _rendered: false\n        }\n    }\n\n    updateData = (data) => {\n        this.props.loadQuestions(data)\n        this.props.restoreAnswers(this.props.value.questions)\n        if (localStorage.getItem(\"_dataPointName\")){\n            this.props.reduceDataPoint(localStorage.getItem('_dataPointName'))\n        }\n        this.props.changeGroup(1)\n        localStorage.setItem(\"_version\", data.version)\n        localStorage.setItem(\"_instanceId\", data.app)\n        let questionId = []\n        let answerType = []\n        let questionGroupArray = Array.isArray(data.questionGroup)\n        if (!questionGroupArray) {\n            data.questionGroup = [data.questionGroup];\n        }\n        data.questionGroup.forEach((g) => {\n            g.question.forEach((q, i) => {\n                questionId.push(q.id)\n                answerType.push(q.type.toUpperCase())\n            })\n        })\n        localStorage.setItem(\"questionId\", questionId)\n        localStorage.setItem(\"answerType\", answerType)\n        this.setState({\n            ...data,\n        })\n        let dataPointId = [\n            Math.random().toString(36).slice(2).substring(1, 5),\n            Math.random().toString(36).slice(2).substring(1, 5),\n            Math.random().toString(36).slice(2).substring(1, 5)\n        ]\n        localStorage.setItem(\"_dataPointId\", dataPointId.join(\"-\"))\n        localStorage.setItem(\"_submissionStart\", Date.now())\n        localStorage.setItem(\"_deviceId\", \"Akvo Flow Web\")\n    }\n\n    updateQuestions = (index) => {\n        this.setState({\n            questionIndex: index\n        })\n    }\n\n    setFullscreen() {\n        const currentState = this.state._fullscreen\n        this.setState({\n            _fullscreen: !currentState\n        })\n    }\n\n    componentDidMount() {\n        this.props.generateUUID({})\n        this.props.changeSettings({_isLoading:true})\n        if (localStorage.getItem(\"_formId\")) {\n            if (localStorage.getItem(\"_formId\") !== this.surveyId){\n                localStorage.clear();\n            }\n        }\n        localStorage.setItem(\"_formId\", this.surveyId)\n        localStorage.setItem(\"_instanceId\", this.instance)\n        let SURVEY_API = (PROD_URL ? API_URL : API_URL + this.instance + '/' + this.surveyId);\n        axios.get(SURVEY_API + '/' + CACHE_URL)\n            .then(res => {\n                this.updateData(res.data)\n                this.setState({ _rendered:true });\n            })\n            .catch(error => {\n                console.log(error)\n                swal(\"Oops!\", \"Something went wrong!\", \"error\")\n                console.log(this.state)\n            })\n\t\tsetTimeout(() => {\n                  this.setState({ load: true });\n        }, DELAY);\n    }\n\n    renderQuestions() {\n        return (\n            <Questions />\n        )\n    }\n\n    renderGroups() {\n        return (\n            <GroupButtons />\n        )\n    }\n\n    render() {\n        return (\n            <div className={this.state._fullscreen ? \"wrapper d-flex toggled\": \"wrapper d-flex\"}>\n                <div className=\"sidebar-wrapper bg-light border-right\">\n                    <Header/>\n                    {this.state._rendered ? this.renderGroups() : \"\"}\n                    {( this.props.value.questions.length === 1 ? \"\" : (<Submit />) )}\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\n                        <button className=\"btn btn-primary\" onClick={this.setFullscreen}>\n                            {this.state._fullscreen ? <FaArrowRight /> : <FaArrowLeft />}\n                        </button>\n                        {( this.props.value.questions.length === 1 ? \"\" : (<DataPoint />) )}\n                        <Pagination />\n                    </nav>\n                    <div className=\"container-fluid fixed-container\" key={'div-group-'+this.state.surveyId}>\n                        <GroupHeaders />\n                        {this.state._rendered ? this.renderQuestions() : \"\"}\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n//<Questions />\n//<Pagination />\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import { getQuestionType } from '../util/QuestionHandler.js'\nimport { isJsonString } from '../util/QuestionHandler.js'\nimport uuid from 'uuid/v4'\n\nconst initialState = {\n    surveyName:\"Loading..\",\n    surveyId:\"Loading..\",\n    version:\"Loading..\",\n    questions: [{\n        group: 1,\n        heading: null,\n        id: 1,\n        localeNameFlag: false,\n        mandatory: false ,\n        order: 1,\n        show: false,\n        text: \"Loading\",\n        type: \"text\",\n        validation: false,\n    }],\n    active: [],\n    answers: [],\n    mandatory: [],\n    submit: false,\n    captcha: false,\n    datapoint: null,\n    datapoints: [],\n    uuid: \"LOADING\",\n    groups: {\n        list: [{\n            index:1,\n            heading:\"Loading Questions\"\n        }],\n        active: 1,\n    },\n    pages:{\n    },\n    cascade:[]\n}\n\nconst validateGroup = (data) => {\n    if (Array.isArray(data)) {\n        return data;\n    }\n\tlet groups = [];\n\tif ( typeof data === \"object\" ) {\n\t\tgroups.push({\n\t\t\tindex:0,\n\t\t\theading:data.heading,\n\t\t\tquestion:data.question\n\t\t});\n\t}\n\treturn groups;\n}\n\nconst addQuestions = (data) => {\n    const relable = (q,g) => {\n        return {\n            ...q,\n            id: parseInt(q.id),\n            order: parseInt(q.order),\n            type: getQuestionType(q),\n            group: (g.index + 1),\n            heading: g.heading,\n            validation: (q.validationRule ? q.validationRule : false),\n            show: false\n        }\n    }\n    const mapgroup = (q, g) => {\n        return q.map(q => relable(q,g))\n    }\n\n\tconst groups = validateGroup(data.questionGroup);\n\n\tlet questionGroup = groups.map((g,i) => {\n\t\treturn {\n\t\t\t...g,\n\t\t\tquestion: mapgroup(g.question, {heading:g.heading, index: i})\n\t\t}\n\t}).map(g => g.question)\n\n    return [].concat(...questionGroup);\n}\n\nconst listDatapoints = (data) => {\n\n\tconst groups = validateGroup(data.questionGroup);\n    return addQuestions(groups).filter(x => x.localeNameFlag).map(q => q.id)\n}\n\nconst listGroups = (data) => {\n\n\tconst groups = validateGroup(data.questionGroup);\n    const group = groups.map((x,i) => {return { index: (i + 1), heading: x.heading}});\n    return {\n        list: group,\n        active: 1\n    }\n}\n\nconst listMandatory = (data) => {\n    return addQuestions(data).filter(x => x.mandatory).map(x => x.id);\n}\n\nconst showHideQuestions = (orig, group) => {\n    let updated_answer = []\n    let active = orig.map(x => {\n        let show = true\n        let dependent = false\n        if(x.dependency) {\n            dependent = x.dependency\n            show = false\n        }\n        if(dependent){\n            let answer_value;\n            if (dependent[\"answer-value\"].includes(\"|\") > -1) {\n                answer_value = dependent[\"answer-value\"].split(\"|\")\n                answer_value = answer_value.map(b => {\n                    if (!isNaN(b)){\n                        b = parseInt(b);\n                    }\n                    return b;\n                })\n            }\n            if (localStorage.getItem(dependent.question) !== null) {\n                let answer = localStorage.getItem(dependent.question)\n                if (isJsonString(answer_value)) {\n                    answer = JSON.parse(answer_value)\n                }\n                if (!isNaN(answer_value)) {\n                    answer = answer.toString()\n                }\n                if (answer_value.includes(answer)){\n                    show = true\n                }\n                if (answer === answer_value) {\n                    show = true\n                }\n            }\n            if (localStorage.getItem(parseInt(dependent.question)) === null) {\n                show = false\n                localStorage.removeItem(x.id)\n            }\n        }\n        if (group) {\n            if(x.group !== group){\n                show = false\n            }\n        }\n        if (!group && !show) {\n            localStorage.removeItem(x.id)\n            if (dependent) {\n                let current_state = updated_answer.find(u => {\n                    return parseInt(u.id) === parseInt(dependent.question)\n                });\n                if (current_state.show === false) {\n                    show = false\n                }\n            }\n        }\n        updated_answer.push({...x, show:show, type: getQuestionType(x)})\n        return { ...x, show:show, type: getQuestionType(x)}\n    })\n    return active;\n}\n\nconst reduceDataPoint = (state) => {\n    return state\n}\n\nconst replaceAnswers = (questions, data, restore) => {\n    const question = questions.map(x => {\n        let answer = null\n        let stored = false\n        if (restore) {\n            stored = data.getItem(x.id);\n            answer = (stored ? stored : null)\n            try {\n                answer = JSON.parse(answer)\n            } catch (err) { }\n            answer = (parseInt(answer).isNan ? parseInt(answer) : answer)\n        }\n        return {\n            id: x.id,\n            answer: answer,\n            mandatory: x.mandatory\n        }\n    });\n    return question;\n}\n\nconst generateUUID = () => {\n    let id = uuid()\n    id = id.split('-')\n    id = id.map(x => {\n        return x.substring(0, 4);\n    }).slice(0,3);\n    return id.join('-');\n}\n\nconst checkSubmission = (answers, questions) => {\n    let activelist = showHideQuestions(questions, false).filter(x => x.show);\n    answers = answers.filter(x => x.mandatory).filter(x => x.answer !== null);\n    let active_mandatory = activelist.map(x => {\n        let answered = answers.filter(y => y.id === x.id).map(y => y.answer);\n        answered = (answered.length < 1 ? false : true)\n        return {\n            ...x,\n            answered: answered\n        }\n    }).filter(x => x.mandatory);\n    let answered_mandatory = active_mandatory.filter(x => x.answered)\n    let captcha = (answered_mandatory.length >= active_mandatory.length)\n    return captcha\n}\n\nconst setupPages = (current, data) => {\n    return {\n        ...current,\n        data\n    }\n}\n\nconst storeCascade = (current, cascade) => {\n    if (current.length < 1) {\n        return [cascade];\n    }\n    return [...current, cascade];\n}\n\nexport const questionReducers = (state = initialState, action) => {\n    switch(action.type){\n        case 'LOAD QUESTIONS':\n            return {\n                ...state,\n                surveyName: action.data.name,\n                surveyId: action.data.surveyId,\n                version: action.data.version,\n                questions: addQuestions(action.data),\n                datapoints: listDatapoints(action.data),\n                groups: listGroups(action.data),\n                mandatory: listMandatory(action.data)\n            }\n        case 'RESTORE ANSWERS':\n            return {\n                ...state,\n                answers: replaceAnswers(action.data, localStorage, true)\n            }\n        case 'REDUCE ANSWER':\n            return {\n                ...state,\n                answers: replaceAnswers(state.answers, action.answer, false),\n            }\n        case 'REDUCE DATAPOINT':\n            return {\n                ...state,\n                datapoint: reduceDataPoint(action.data)\n            }\n        case 'CHANGE GROUP':\n            return {\n                ...state,\n                questions: showHideQuestions(state.questions, action.group),\n                groups: {...state.groups, active: action.group}\n            }\n        case 'CHECK SUBMISSION':\n            return {\n                ...state,\n                captcha: checkSubmission(state.answers, state.questions),\n                submit: false\n            }\n        case 'SUBMIT STATE':\n            return {\n                ...state,\n                submit: action.data\n            }\n        case 'GENERATE UUID':\n            return {\n                ...state,\n                uuid: generateUUID(action.data)\n            }\n        case 'PAGES SETTINGS':\n            return {\n                ...state,\n                pages: setupPages(state.pages, action.data)\n            }\n        case 'STORE CASCADE':\n            return {\n                ...state,\n                cascade: storeCascade(state.cascade, action.data)\n            }\n        default:\n            return state;\n    }\n}\n\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from './Home'\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { questionReducers } from './reducers/questionReducers.js'\nimport { PROD_URL } from './util/Environment.js'\n\nconst BASE_URL = ( PROD_URL ? \"/akvo-flow-web\" : process.env.REACT_APP_BASE_URL);\n\nconst store = createStore(questionReducers)\n\nclass App extends Component {\n\n    render () {\n        return (\n\t        <Provider store={store}>\n            <BrowserRouter>\n                <Route path={ BASE_URL + \"/:instance/:surveyid\"} render={ props => <Home key=\"home\" {...props} />} />\n            </BrowserRouter>\n\t        </Provider>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nrequire('dotenv').config()\n\nif (localStorage.getItem(\"questionId\")){\n    let qlcache = localStorage.getItem(\"questionId\").split(\",\");\n    let atcache = localStorage.getItem(\"answerType\").split(\",\");\n    let photocache = qlcache.map((x,i) => {\n        return {id: x, type: atcache[i]}\n    }).filter(x => x.type === \"PHOTO\");\n    if (photocache.length > 0) {\n        photocache.forEach(x => localStorage.removeItem(x.id))\n    };\n}\nReactDOM.render(<App /> , document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}